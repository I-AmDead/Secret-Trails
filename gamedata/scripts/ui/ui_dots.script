-- инициализация
class "dots" (CUIScriptWnd)
function dots:__init( owner, wnd_name, def, callback ) super()
	self.callback = callback
	self.def_text = def
	self.name = wnd_name
	self:InitControls()
	self:InitCallBacks()
end

function dots:__finalize() end

function dots:InitControls()
	-- здесь определяем координаты левого верхнего угла и ширину-высоту
	self:Init(50,50,550,450)
	self:SetWindowName(self.name)

	-- файл-описатель наших элементов
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_dots_wnd.xml")

	-- видео на заднем плане
	xml:InitStatic("back_video", self)

	-- рамка
	xml:InitStatic("background", self)

	-- кнопки
	self:Register(xml:Init3tButton("caption", self),"caption")
	self:Register(xml:Init3tButton("btn_1", self),"btn_1")
	-- кнопка выхода
	self:Register(xml:Init3tButton("btn_quit", self),"btn_quit")
	self.edit_box = xml:InitEditBox( "edit_box", self )
	self.edit_box:SetText( self.def_text )
	self:Register( self.edit_box, "edit_box")

end

function dots:InitCallBacks()
	-- тут интерактивные элементы, при определенном действии выполняется заданная ф-ия
	self:dshAddCallback("btn_1", ui_events.BUTTON_CLICKED, self.dots1, self)
	self:dshAddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self)
end

function dots:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
-- на выход повесим Esc
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		end
		if dik == DIK_keys.DIK_RETURN then
			self:dots1()
		end
	end
	return true
end

function dots:dots1()
	if self.callback then
	  self.callback( self.edit_box:GetText() )
	end
	self:on_quit()
end

function dots:on_quit()
  self:GetHolder():start_stop_menu( self, true )
  self:dsh_unregister_self()
end

