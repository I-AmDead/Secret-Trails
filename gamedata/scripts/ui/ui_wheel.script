-- -*- mode: lua; encoding: windows-1251 -*-

function attach( sm )
  sm:subscribe({ signal = "on_key_down", fun = this.on_key_down })
end

local aw_cooldown = 0
local slot_focus = false

function on_key_down(key, bind)
    if level.main_input_receiver()
    or not db.actor:alive() then return end
	if bind == key_bindings.kWHEEL_SLOT then
    	start_slot_wheel()
	end
end

function start_slot_wheel()
	GUI = nil
	if not GUI then
		GUI = UIWheelSlot()
	end
	
	if GUI and not GUI:IsShown() then
		GUI:ShowDialog(true)
		aw_cooldown = time_global()
	end
end

class "UIWheelSlot" ( CUIScriptWnd )
function UIWheelSlot:__init() super()
	self:Init(0, 0, 1024, 768)
	self:SetAutoDelete(true)
	self:AllowMovement(true)
	self.slot_max = 6
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_wheel_slot.xml")

	self.dialog	= xml:InitStatic("wheel", self)
	self.background = xml:InitStatic("wheel:background", self.dialog)

	self.box = {}
	self.box_btn = {}
	
	for i = 1, self.slot_max do
		local slot_sect = db.actor:item_in_slot(i - 1) and db.actor:item_in_slot(i - 1):section()
		if slot_sect then
			self.box[i] = xml:InitStatic("wheel:all" .. ":box_" .. i, self.dialog)
			self.box_w = self.box[i]:GetWidth()
			self.box_h = self.box[i]:GetHeight()
			dsh_ui.set_item_icon( slot_sect, self.box[i], self.box_w, self.box_h )
			self.box_btn[i] = xml:Init3tButton("slot:btn", self.box[i])
			self.box_btn_w = self.box_btn[i]:GetWidth()
			self.box_btn_h = self.box_btn[i]:GetHeight()
			dsh_ui.set_item_icon( slot_sect, self.box_btn[i], self.box_btn_w, self.box_btn_h )
			self:Register(self.box_btn[i],"btn_" .. i)
		end
	end
	
	for i=1,self.slot_max do
		local wrapper = function(handler) -- we need wrapper in order to pass ctrl to method
			self:SlotSwitch(i)
		end
		self:AddCallback("btn_" .. i, ui_events.BUTTON_CLICKED, wrapper, self)
		self:AddCallback("btn_" .. i, ui_events.STATIC_FOCUS_RECEIVED, function(n) slot_focus = i end, self)
		self:AddCallback("btn_" .. i, ui_events.STATIC_FOCUS_LOST, function() slot_focus = false end)
	end
end

function UIWheelSlot:SlotSwitch(n)
	if db.actor:active_slot() ~= (n - 1) then
		db.actor:activate_slot(n - 1)
	end
	self:Close()
end

function UIWheelSlot:OnKeyboard(dik, keyboard_action)
	local res = CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if (res == false) then
		if keyboard_action == ui_events.WINDOW_KEY_RELEASED then
			if (time_global() < aw_cooldown + 100) then
				return
			end
			
			local bind = dik_to_bind(dik)
			if bind == key_bindings.kWHEEL_SLOT then
				if slot_focus then
					self:SlotSwitch(slot_focus)
				else
					self:Close()
				end
			end
		end
	end
	return res
end

function UIWheelSlot:Close()
	if self:IsShown() then
		self:HideDialog()
		self:Show(false)
	end
end