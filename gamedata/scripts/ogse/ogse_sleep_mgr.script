-- -*- mode: lua; coding: windows-1251-dos -*-
-----------------------------------------------------------------------
--- ogse_sleep_mgr.script
--- Менеджер сна и бодрствования ГГ
--- Исходная версия: xStream, Ab@dDon & DEXXX 2007-2008
--- Правки и адаптация: KamikaZze, Dusty79 (c) OGS Evolution Team
--- Версия 2: Malandrinus
--- version 2.1.1 (02/2013)
-----------------------------------------------------------------------

function attach( sm )
end


local sleeping_now = false
function is_sleep_active()
  return sleeping_now
end


local break_sleep_request = false -- флажок запроса на прерывание сна
function break_sleep()            -- принудительное прерывание сна
  break_sleep_request = true
end


function begin_sleep( desired_sleep_time )
  -- если кто-то запрашивал прерывание сна во время бодрствования, то
  -- сбрасываем это
  break_sleep_request = false
  db.actor:stop_talk()
  level.disable_input()
  level.add_pp_effector( "black.ppe", 105, false )
  dsh.level_timeout( 2000, function() begin_sleep2( desired_sleep_time ) end )
end


function begin_sleep2( desired_sleep_time )
  local sm = ogse_signals.get_mgr()
  sm:call( "on_before_sleep", desired_sleep_time )
  sm:stop_rescheduling( true )
  sleeping_now = true
  local urgent_awakening = false
  local start_sleep_time = game.get_game_time()
  -- каждый час сна делим на периоды по 15 минут (4 отсчёта на час)
  local sleep_counts     = math.ceil( desired_sleep_time * 4 )
  local dt_ms            = math.ceil(
    desired_sleep_time * 3600 * 1000 / sleep_counts
  )
  local prev_health      = db.actor.health
  local aobj             = get_actor_obj()

  for i = 1, sleep_counts do
    -- переводим стрелки
    level.advance_game_time( dt_ms )
    -- обновляем движковые эффекты здоровья
    db.actor:update_condition()
    aobj:UpdateArtefactsOnBelt()
    sm:call( "on_actor_update", 0 )
    sm:call( "on_update", 0 )
    -- проверяем останов по разным событиям
    if break_sleep_request then -- кто-то запросил останов сна
      urgent_awakening = true
      break
    end
    -- начался выброс
    if has_alife_info( "pre_blowout" ) then
      -- ogse.autohiding_msg( "blowout_not_sleep", 1500 )
      urgent_awakening = true
      break
    end
    -- начинается выброс
    if dsh_cop_weather.get_weather_mgr():is_surge_in_process() then
      -- ogse.autohiding_msg( "blowout_not_sleep", 1500 )
      urgent_awakening = true
      break
    end
    -- проверяем условие останова сна по состоянию здоровья
    local cur_health = db.actor.health
    local dh         = cur_health - prev_health
    if cur_health < 0.1 and dh < 0 then
      -- здоровье снизилось до критической величины и продолжает снижаться
      -- ogse.autohiding_msg( "ogse_sleep_mgr_warn_4_text", 1500 )
      urgent_awakening = true
      break
    end
    prev_health = cur_health
  end

  -- db.actor:update_condition()
  db.actor.power = 1
  level.set_ignore_game_state_update()
  sleeping_now = false
  break_sleep_request = false
  -- обновили менеджер погоды
  dsh_cop_weather.get_weather_mgr():force_update()

  -- сколько реально спали
  local awakening_time  = game.get_game_time()
  local real_sleep_time = awakening_time:diffSec( start_sleep_time )

  -- привет мир
  sm:stop_rescheduling( false )
  sm:call( "on_sleep_finished", real_sleep_time )
  dsh.exec_on_update(
    u3_utils.savegame, "Пробуждение" .. " - " .. game.translate_string( level.name() )
  )

  level.add_cam_effector( "camera_effects\\prison_1.anm", 25, false, "" )
  level.add_pp_effector( "yantar_underground_psi.ppe", 2007, false )
  level.add_pp_effector( "total_recall.ppe", 2008, false )
  level.enable_input()


  local snd_obj = xr_sound.get_safe_sound_object(
    [[characters_voice\human_01\stalker\states\breath\breath_2]]
  )
	if snd_obj then
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector():set( 0, 0, 0 ), 15.0 )
	end
end