-- -*- mode: lua; coding: windows-1251-dos -*-

local next_wnd_id        = 1
local registered_windows = {}

class "dshCUIScriptWnd" ( CUIScriptWnd )
function dshCUIScriptWnd:__init() super()
  self.__dshCUIScriptWnd_id = next_wnd_id
  registered_windows[ next_wnd_id ] = self
  next_wnd_id = next_wnd_id + 1
end


function dshCUIScriptWnd:dshAddCallback( ui_name, ui_event, func )
  local id = self.__dshCUIScriptWnd_id
  ASSERT( id, "[%s]: __dshCUIScriptWnd_id not found", script_name() )
  self:AddCallback(
    ui_name, ui_event,
    function( id )
      local wnd = registered_windows[ id ]
      if wnd then
        func( wnd )
      else
        log2(
          "[%s]: ignore callback for unregistered window %s: ui_name = %s, ui_event = %s",
          script_name(), id, ui_name, ui_event
        )
      end
    end,
    id
  )
end


function dshCUIScriptWnd:dsh_unregister_self()
  local id = self.__dshCUIScriptWnd_id
  ASSERT( id, "[%s]: __dshCUIScriptWnd_id not found", script_name() )
  registered_windows[ id ] = nil
  self:ClearCallbacks()
  -- dsh_memuse.cleanupmem()
end


function set_item_icon( sect, s, sw, sh )
  local icon = CIconParams( sect )
  icon:set_shader( s )
  local rect = icon:original_rect()
  local tw = rect.x2 - rect.x1
  local th = rect.y2 - rect.y1
  local w, h
  if tw > th then
    w = math.min( tw, sw )
    h = w * ( th / tw )
    if h > sh then
      local k = sh / h
      w = w * k
      h = h * k
    end
  else
    h = math.min( th, sh )
    w = h * ( tw / th )
    if w > sw then
      local k = sw / h
      w = w * k
      h = h * k
    end
  end
  s:SetWidth(  w )
  s:SetHeight( h )
end
