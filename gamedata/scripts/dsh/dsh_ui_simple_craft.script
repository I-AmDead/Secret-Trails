-- -*- mode: lua; coding: windows-1251-dos -*-

class "select_craft_items" ( CUIListItemEx )
function select_craft_items:__init( xml ) super()
  xml:InitWindow( "list_item", 0, self )
  self:SetAutoDelete( true )
  self.itmnum = xml:InitStatic( "list_item_num",  self )
  self.itmn   = xml:InitStatic( "list_item_name", self )
  self.itmage = xml:InitStatic( "list_item_cond", self )
end


class "ui_simple_craft" ( dsh_ui.dshCUIScriptWnd )
function ui_simple_craft:__init( xml, item ) super()
  self.item       = item
  self.list_items = {}
  self.need_close = false
  self.xml_fname  = xml
  self:InitControls()
  self:InitCallBacks()
  self:FillList()
  local item_name = game.translate_string(
    get_string( self.item:section(), "inv_name_short" )
  )
  self:DrawItemName( item_name, self.item_name1 )
  self:DrawItem(
    self.item, self.item_icon1, self.item_icon1_w, self.item_icon1_h
  )
  self.item1_progress:SetProgressPos( self.item:condition() * 100 )
  self.item2_progress:Show( false )
end


function ui_simple_craft:InitControls()
  local xml = CScriptXmlInit()
  self.xml  = xml
  xml:ParseFile( self.xml_fname )
  xml:InitWindow( "main", 0,     self )
  xml:InitStatic( "back_video",  self )
  xml:InitStatic( "background",  self )

  self.item1 = xml:InitStatic( "item1", self )
  xml:InitStatic( "item_frame1", self.item1 )
  self.item_name1 = xml:InitStatic( "item_name1", self.item1 )
  self.item_icon1 = xml:InitStatic( "item_icon1", self.item1 )
  self.item_icon1_w = self.item_icon1:GetWidth()
  self.item_icon1_h = self.item_icon1:GetHeight()
  self.item1_progress = xml:InitProgressBar( "bar_frame1", self.item1 )

  self.item2 = xml:InitStatic( "item2", self )
  xml:InitStatic( "item_frame2", self.item2 )
  self.item_name2 = xml:InitStatic( "item_name2", self.item2 )
  self.item_icon2 = xml:InitStatic( "item_icon2", self.item2 )
  self.item_icon2_w = self.item_icon1:GetWidth()
  self.item_icon2_h = self.item_icon1:GetHeight()
  self.item2_progress = xml:InitProgressBar( "bar_frame2", self.item2 )

  self.shans_progress = xml:InitProgressBar( "shans_bar_frame", self )

  self.list_frame = xml:InitFrame( "list_frame", self )
  self.list_box   = xml:InitList( "list", self.list_frame )
  self.list_box:ShowSelectedItem( true )
  self:Register( self.list_box, "list_window" )

  xml:InitStatic( "window_name", self )
  xml:InitStatic( "caption1", self )
  xml:InitStatic( "caption2", self )
  xml:InitStatic( "caption3", self )
  xml:InitStatic( "caption4", self )
  self.btn_4 = xml:Init3tButton( "btn_4", self )
  self:Register( self.btn_4, "btn_4" )
  self.btn_4:Enable( false )
  self:Register( xml:Init3tButton( "btn_quit", self ), "btn_quit" )

  self.message_box = CUIMessageBoxEx()
  self:Register( self.message_box, "message_box" )
end


function ui_simple_craft:InitCallBacks()
  self:dshAddCallback( "btn_4", ui_events.BUTTON_CLICKED, self.rep_btn, self )
  self:dshAddCallback(
    "btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self
  )
  self:dshAddCallback(
    "list_window", ui_events.LIST_ITEM_CLICKED, self.OnListItemClicked, self
  )
  self:dshAddCallback(
    "list_window", ui_events.WINDOW_LBUTTON_DB_CLICK, self.OnListItemDbClicked,
    self
  )
  self:dshAddCallback(
    "message_box", ui_events.MESSAGE_BOX_OK_CLICKED, self.OnMsgYes, self
  )
end


function ui_simple_craft:rep_btn()
  local list = self.list_box
  if list:GetSize() == 0 then
    self.msgbox_id = 1
    self.message_box:Init( "message_box_out_of_item" )
    self:GetHolder():start_stop_menu( self.message_box, true )
    return
  end
  local index = list:GetSelectedItem()
  if index == -1 then
    self.msgbox_id = 1
    self.message_box:Init( "message_box_select_item" )
    self:GetHolder():start_stop_menu( self.message_box, true )
    return
  end

  local item = list:GetItem( index )
  local destr_item_index = tonumber( item.itmnum:GetText() )
  local destr_item = self.list_items[ destr_item_index ]
  self:do_craft( destr_item )
end


function ui_simple_craft:do_craft( item )
  self:message_box_success()
end


function ui_simple_craft:message_box_success()
  self.msgbox_id  = 1
  self.need_close = true
  self.message_box:Init( "message_box_repair_success" )
  self:GetHolder():start_stop_menu( self.message_box, true )
end


function ui_simple_craft:on_quit()
  self.list_box:RemoveAll()
  self:GetHolder():start_stop_menu( self, true )
  self:dsh_unregister_self()
end


function ui_simple_craft:OnMsgYes()
  if self.msgbox_id == 1 then
    if self.need_close then
      self.need_close = false
      self:on_quit()
    end
  end
  self.msgbox_id = 0
end


function ui_simple_craft:OnListItemClicked()
  local list_box = self.list_box
  if list_box:GetSize() == 0 then return end
  local itm_index = list_box:GetSelectedItem()
  local item      = list_box:GetItem( itm_index )
  if not item then return end
  self.btn_4:Enable( true )
  local destr_item_name  = item.itmn:GetText()
  local destr_item_index = tonumber( item.itmnum:GetText() )
  local destr_item_st    = self.list_items[ destr_item_index ]
  self.item2_progress:SetProgressPos( destr_item_st:condition() * 100 )
  self.item2_progress:Show( true )
  self:DrawItemName( destr_item_name, self.item_name2 )
  self:DrawItem(
    destr_item_st, self.item_icon2, self.item_icon2_w, self.item_icon2_h
  )
  self:DrawShansBar( self.item, destr_item_st )
end


function ui_simple_craft:OnListItemDbClicked()
  self:rep_btn()
end


function ui_simple_craft:FillList()
  for i = 0, db.actor:object_count() - 1 do
    local item_from_inv = db.actor:object( i )
    if self:can_include_into_list( item_from_inv ) then
      table.insert( self.list_items, item_from_inv )
    end
  end
  table.sort(
    self.list_items,
    function( a, b ) return ( a:condition() > b:condition() ) end
  )
  local j = 1
  for i, item_from_inv in ipairs( self.list_items ) do
    local _item_num  = j
    local _item_name = get_string( item_from_inv:section(), "inv_name_short" )
    if not _item_name then
      _item_name = get_string( item_from_inv:section(), "inv_name" )
    end
    _item_name = game.translate_string( _item_name )
    local len_point = 29
    if string.len( _item_name ) > len_point then
      _item_name = string.sub( _item_name, 1, len_point )
      _item_name = _item_name .. "..."
    end
    self:AddItemToList(
      _item_num, _item_name,
      string.format( "%.1f%%", item_from_inv:condition() * 100 )
    )
    j = j + 1
  end
end


function ui_simple_craft:can_include_into_list( item )
  return false
end


function ui_simple_craft:AddItemToList( item_num, item_name, item_cond )
  local _itm = select_craft_items( self.xml )
  _itm.itmnum:SetText( item_num  )
  _itm.itmn:SetText(   item_name )
  _itm.itmage:SetText( item_cond )
  self.list_box:AddItem( _itm )
end


function ui_simple_craft:DrawShansBar( item, destr_item )
  local bar_height = self:calc_shans_bar_height( item, destr_item )
  if bar_height < 0 then
    bar_height = 0
  elseif bar_height > 100 then
    bar_height = 100
  end
  self.shans_progress:SetProgressPos( bar_height )
end


function ui_simple_craft:calc_shans_bar_height( item, destr_item )
  return 100
end


function ui_simple_craft:DrawItemName( item, s )
  if item then
    local len_point = 25
    if string.len( item ) > len_point then
      item = string.sub( item, 1, len_point )
      item = item .. "..."
    end
    s:SetText( item )
  else
    s:SetText( "" )
  end
end


function ui_simple_craft:DrawItem( item, s, sw, sh )
  dsh_ui.set_item_icon( item:section(), s, sw, sh )
end
