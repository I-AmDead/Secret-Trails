-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_monster_death", fun = this.on_monster_death })
end


local save_prefix = "dsh_monster_microquest."
function on_monster_death( victim, who )
  if not ( victim and who:id() == db.actor:id() ) then return end
  local sobj = alife():object( victim:id() )
  if not sobj then return end
  local ini = sobj:spawn_ini()
  if not ini:section_exist( "microquest" ) then return end
  local money = get_float( "microquest", "reward_money", nil, ini )
  if money then
    money = ogse.load_var(
      save_prefix .. "reward_money", 0
    ) + tonumber( money )
    ogse.save_var( save_prefix .. "reward_money", money, "float" )
  end
  local ritems = get_string( "microquest", "reward_items", nil, ini )
  if ritems then
    local items = ogse.load_var_safe( save_prefix .. "reward_items" ) or {}
    for i, k in ipairs( split_comma_separated_list( ritems ) ) do
      table.insert( items, k )
    end
    ogse.save_var(
      save_prefix .. "reward_items", items, "array_template", { "string" }
    )
  end
  actor_stats.add_points( "exp", "exp_monster_microquest", 1, 1 )
end


function has_reward()
  return ogse.var_exists( save_prefix .. "reward_money" )
end


function get_next_reward()
  local money = ogse.load_var( save_prefix .. "reward_money", 0  )
  local items = ogse.load_var( save_prefix .. "reward_items", {} )
  ogse.delete_var( save_prefix .. "reward_money" )
  ogse.delete_var( save_prefix .. "reward_items" )
  return money, items
end
