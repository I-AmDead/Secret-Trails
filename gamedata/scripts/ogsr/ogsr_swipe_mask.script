-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_key_down", fun = this.on_key_down })
  sm:subscribe({ signal = "on_spawn",    fun = this.rain_drops_restart })
end

--------------------------------------------------------------
-- Trigger
--------------------------------------------------------------
local new_speed = 0
local mc_anm_state = 1
local mc_anm_time_1 = 0
local mc_anm_time_2 = 0
local mc_anm_sec = "anim_mask_clean"
local snd_gasmask = sound_object('interface\\item_usage\\gasmask_swipe')
local hide_hand_speed = 1.5

local lowered_anm_kinds = {
	["w_sniper"] 	= true,
	["w_rifle"] 	= true,
	["w_smg"]	    = true,
	["w_shotgun"] 	= true,
}

local lowered_anm_classes = {
	["WP_VAL"] 		= true,
	["WP_AK74"] 	= true,
	["WP_LR300"] 	= true,
	["WP_BM16"] 	= true,
	["WP_SVD"] 		= true,
	["WP_SVU"]		= true,
	["WP_GROZA"] 	= true,
	["WP_ASHTG"] 	= true,
	["WP_SHOTG"] 	= true,
	["WP_RG6"] 		= true,
	["WP_RPG7"] 	= true,
	["D_PDA"]		= true,
}

function allow_animation()
	return (game.hud_motion_allowed() and (not level.only_allow_movekeys()))
end

function on_key_down(key, bind)
    if bind ~= key_bindings.kSWIPE_MASK
    or level.main_input_receiver()
    or get_con_string("r2_rain_drops") == "0"
    or not db.actor:alive()
    or not allow_animation() then return end
    swipe_mask()
end

-- EMULATION SWIPE RAIN DROPS

function swipe_mask()
	local anm_name = "script\\gasmask.anm"
	local anm_additional_length = 0.45
	local itm = db.actor:active_item()
	mc_anm_time_1 = game.get_motion_length(mc_anm_sec, "anm_hide_hand", hide_hand_speed)
	mc_anm_time_2 = game.get_motion_length(mc_anm_sec, "anm_wipe", 1)
				
	if (itm) then
		local kind = get_string(itm:section(),"kind") or nil
		local class = get_string(itm:section(),"class") or nil
		if ((kind and lowered_anm_kinds[kind]) or (class and lowered_anm_classes[class])) then
			anm_name = "script\\lower.anm"
			anm_additional_length = 0.75
		end
	end
	
	if (mc_anm_state == 1) then
		game.play_hud_anm(anm_name, 0, 1, 1, false)	
		game.play_hud_motion(1, mc_anm_sec, "anm_hide_hand", true, hide_hand_speed)
		new_speed = game.set_hud_anm_time(anm_name, ((mc_anm_time_1 + mc_anm_time_2) / 1000) + anm_additional_length)
		level.only_allow_movekeys(true)
		mc_anm_state = 2
		dsh.level_timeout( mc_anm_time_1, function() swipe_mask() end )
	elseif (mc_anm_state == 2) then
		game.play_hud_motion(1, mc_anm_sec, "anm_wipe", false, 1)
		snd_gasmask:play(db.actor,0,sound_object.s2d)
		level.add_cam_effector("camera_effects\\weapon\\gasmask_swipe1.anm", 7538, false, "", 0, false)
		mc_anm_state = 3
		dsh.level_timeout( mc_anm_time_2 - 400, function() swipe_mask() end )
	elseif (mc_anm_state == 3) then
		if (new_speed) then game.play_hud_anm(anm_name, 2, new_speed, 1, false, true) end
		rain_drops_restart()
		mc_anm_state = 4
		dsh.level_timeout( mc_anm_time_2, function() swipe_mask() end )
	elseif (mc_anm_state == 4) then
		mc_anm_state = 1
		level.only_allow_movekeys(false)
	end
end

-- RAIN DROPS RESTART
function rain_drops_restart()
  level.only_allow_movekeys(false)
  cmd("r2_rain_drops_control off")
  dsh.level_timeout( 10, function() cmd("r2_rain_drops_control on") end )
end