-- Autor: JR

-- level.disable_vertex(lv)
-- level.enable_vertex(lv)

--; format
--
--;[level_name]
--;disable=1,2,3,4,5-10
--;enable=9
--;disable=100-200
--;enable=101,102,103-110

local params_ini = ini_file([[level_vertex_params.ltx]])

function attach(sm)
    sm:subscribe({signal = "on_spawn", fun = on_spawn})
end

function on_spawn()
    local level_name = level.name()

    local list = {}

    if params_ini:section_exist(level_name) then
        local result, id, value = nil, nil, nil
        for a = 0, params_ini:line_count(level_name) - 1 do
            result, id, value = params_ini:r_line(level_name, a)
            if id then
                local i = {}
                i.action = id
                i.values = string.trim(value)
                table.insert(list, i)
            end
        end
    end

    for _, v in ipairs(list) do
        local function action(lv)
            if v.action == "disable" then
                level.disable_vertex(lv)
		log3("disable vertex = %s", lv)
            elseif v.action == "enable" then
                level.enable_vertex(lv)
		log3("enable vertex = %s", lv)
            end
        end

        local values = split_comma_separated_list(v.values)

        for _2, v2 in ipairs(values) do
            local range = string.explode("-", v2)
            if #range == 1 then
                action(range[1])
            else
                for i = range[1], range[2] do
                    action(i)
                end
            end
        end
    end
end