-- based on:
-- CrookR 9/3/2021
-- Support for 2D scope shader, helper script for easier interfacing with engine. Uses
-- -*- mode: lua; coding: windows-1251-dos -*-

function attach(sm)
    sm:subscribe({ signal = "on_actor_weapon_zoom_out", fun = this.actor_on_weapon_zoom_out   })
    sm:subscribe({ signal = "on_actor_weapon_zoom_in",  fun = this.actor_on_weapon_zoom_in    })
    sm:subscribe({ signal = "on_death",                 fun = this.actor_on_before_death })
end

local pnv_mode_save
local scope_radius
local zooming_t

function actor_on_weapon_zoom_out()
    apply_pnv()
    cmd("scope_params_4 0.0, 1.25, 4.0")
end

function actor_on_weapon_zoom_in()
    pnv_mode_save = get_con_string("r_pnv_mode", 0)
    if (get_con_string("fake_scope_enable") == "off" 
    or get_con_string("fake_scope_enable") == "0")
    and (db.actor and db.actor:alive()) then return end

    local wpn = db.actor:active_item()
    if not (wpn) then return end

    local wpn_w = wpn:get_weapon()
    if wpn_w and wpn_w:UseScopeTexture() then
        updateScope(wpn)
    end
end

function actor_on_before_death()
    cmd("scope_params_4 0.0, 1.25, 4.0")
    apply_pnv()
end

local scopeBaseFactors = {}

function updateScope(wpn)
    local scope_section
    if wpn then
        local scopeName = nil
        if ogse_wpn_utils.get_scope_status(wpn) == 2 and ogse_wpn_utils.get_scope_flag(wpn) then
            local scope_section = get_string(wpn:section(), "scope_name")
            scopeName = get_string(scope_section, "scope_texture")
            nv_enable = get_bool(scope_section, "scope_night_vision")
        elseif ogse_wpn_utils.get_scope_status(wpn) == 1 then
            scopeName = get_string(wpn:section(), "scope_texture")
            nv_enable = get_bool(wpn:section(), "scope_night_vision")
        end

        if scopeName and fake_scope_radius.scope_radius[scopeName] then
            scope_radius = fake_scope_radius.scope_radius[scopeName]
            cmd("scope_params_4 " .. scope_radius .. ", 1.25" .. ", 10")
            local scope_section = get_string(wpn:section(), "scope_name")
            if nv_enable then
                zooming_t = dsh.wait_condition(
                    function()
                        local wpn = db.actor:active_item()
                        if wpn and wpn.get_weapon then
                            return not (wpn:get_weapon().zoom_rotation_factor < 1)
                        else
                            return true -- что б если пушка куда то пропала - не ждать вечно
                        end
                    end,
                    function()
                        zooming_t = nil
                        if pnv_mode_save == "1" then
                            cmd("r_pnv_mode", 0)
                        end
                        apply_pnv(scope_section)
                    end
                )
            end
        end
    end
end

function apply_pnv(nv_sect)
    if nv_sect then
        local mode = get_u32(nv_sect, "r_pnv_mode", 0)
        local color = get_vector(nv_sect, "r_pnv_color")
        cmd("r_pnv_color", string.format("%f,%f,%f", color.x, color.y, color.z))
        cmd("r_pnv_noise", get_string(nv_sect, "r_pnv_noise"))
        cmd("r_pnv_scanlines", get_string(nv_sect, "r_pnv_scanlines"))
        cmd("r_pnv_mode", tostring(mode))
        cmd("r_pnv_radius", scope_radius)
        cmd("r_pnv_not_and_vignete_mode", get_float(nv_sect, "r_pnv_not_and_vignete_mode", 2.1))
        cmd("r_pnv_brightness_and_alfa_vignete", get_float(nv_sect, "r_pnv_brightness_and_alfa_vignete", 10.0))
    else
        local nv_slot = db.actor:item_in_slot( 11 )
        local mode = pnv_mode_save
        if nv_slot then
            local nv_sect = nv_slot:section()
            if nv_sect then
                local color = get_vector(nv_sect, "r_pnv_color")
                cmd("r_pnv_color", string.format("%f,%f,%f", color.x, color.y, color.z))
                cmd("r_pnv_noise", get_string(nv_sect, "r_pnv_noise"))
                cmd("r_pnv_scanlines", get_string(nv_sect, "r_pnv_scanlines"))
                cmd("r_pnv_radius", get_float(nv_sect, "r_pnv_radius", 0.5))
                cmd("r_pnv_not_and_vignete_mode", get_float(nv_sect, "r_pnv_not_and_vignete_mode", 2.2))
                cmd("r_pnv_brightness_and_alfa_vignete", get_float(nv_sect, "r_pnv_brightness_and_alfa_vignete", 10.1))
            end
        end
        cmd("r_pnv_mode", tostring(mode))
    end
end