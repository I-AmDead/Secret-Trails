--[[ ----------------------------------------------------------------------------------------------
 Платформы: CoP 1.6.2
 Описание : Ноги от 1-го лица
 Поддержка: 2013 © Shoker Mod
 Авторы   : Shoker, РикошеТ
 Дата	  : 31.08.2013г
 
 Shoker Weapon Mod 2.1 port, modified by Wang_Laoshi (Ethereal) to work with Anomaly mod. Thanks a lot to the original creators of this mod - Shoker, РикошеТ and SWM Team in general.
--]] ----------------------------------------------------------------------------------------------

function attach( sm )
    sm:subscribe({ signal = "on_item_to_slot", fun = this.actor_item_to_slot })
    sm:subscribe({ signal = "on_item_to_ruck", fun = this.actor_item_to_ruck })
    sm:subscribe({ signal = "on_drop",         fun = this.actor_item_to_ruck })
    sm:subscribe({ signal = "on_update",       fun = this.actor_update       })
end

local disabled = false
local hidden = false
local hide_legs_low_crouch
local cdir
local pos_set
local lean_reset = false
local swm_current_outfit = {}

-- <!> Чтобы камера слишком сильно не входила в ноги, нужно в system.ltx поправить макс. углы поворота в actor_firsteye_cam и actor_ladder_cam

local HEIGHT = 0.0 -- > Смещение позиции ног от игрока по Y
local HIDE_DISTANCE = 2 -- > Расстояние камеры до головы, дальше которого скрываем ноги
local RSPN_DISTANCE = 5 -- > Расстояние от игрока до ног, на котором респавним ноги
local DISTANCE_MOD_FWD = -0.65 -- > Сдвиг модели от игрока вперёд\назад в метрах
local DISTANCE_MOD_RGT = 0.0 -- > Сдвиг модели от игрока влево\вправо в метрах

local LEGS_SECTION = "actor_legs" -- > Секция ног

local DISABLED_FLAGS = {
    [7] = 64,
    [14] = 8192,
    [15] = 16384
} -- > Коды заблокированных флагов (чтобы не дублировать всю таблицу по 2 раза ради наклонов влево\вправо)

local SPEC_SHIFT = { -- > Уникальные смещения для отдельных анимаций
    ["lancew_legs_ladder_idle"] = {
        fwd = -0.3,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_ladder_down"] = {
        fwd = -0.3,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_ladder_up"] = {
        fwd = -0.3,
        rgt = DISTANCE_MOD_RGT
    }
}

local SPEC_SHIFT_PRONE = {
    ["lancew_legs_idle_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_jump_start_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_jump_idle_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_fl_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_fr_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_b_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_bl_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_l_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    },
    ["lancew_legs_walk_r_sc"] = {
        fwd = -1.5,
        rgt = DISTANCE_MOD_RGT
    }

}

local actor_flags = {} -- > Разобраный побайтно флаг состояния тела игрока 

--[[
1	-	вперёд			  		(1)
2	-	назад			  		(2)
3	-	влево			  		(4)
4	-	вправо			  		(8)
5	-	приседание		  		(16)
6	-	красться		  		(32)
7	-	поворорт ТЕЛА вбок? 	(64)	--> Направление поворота не хранит
8	-	прыжок (старт)			(128)
9	-	прыжок (полёт)			(256)
10	-	прыжок (приземление)	(512)
11	-							(1024)
12	-	лестница				(2048)
13	-	бег						(4096)
14	-	наклон влево			(8192)
15	-	наклон вправо			(16384)
16	-							(32768)
]]

local AnimTable = { -- \\ Таблица соответствия кодов тела анимациям.	[0]					= "lancew_legs_idle",			--> Стоим
    [0] = "lancew_legs_idle", -- > Стоим
    [0 + 16] = "lancew_legs_idle_c", -- > Стоим (ctrl)
    [0 + 32] = "lancew_legs_idle", -- > Стоим (shift)
    [0 + 16 + 32] = "lancew_legs_idle_sc", -- > Стоим (ctrl+shift)

    [1 + 4096] = "lancew_legs_sprint", -- > Бег
    [1 + 4 + 4096] = "lancew_legs_moving_fl", -- > Бег+влево
    [1 + 8 + 4096] = "lancew_legs_moving_fr", -- > Бег+вправо

    [128] = "lancew_legs_jump_start", -- > Прыжок (Старт)
    [256] = "lancew_legs_jump_idle", -- > Прыжок (Полёт)
    [512] = "lancew_legs_jump_end", -- > Прыжок (Приземление)
    [128 + 16] = "lancew_legs_jump_start", -- > Прыжок (Старт)(ctrl)
    [256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок (Полёт)(ctrl)
    [512 + 16] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(ctrl)
    [128 + 32] = "lancew_legs_jump_start", -- > Прыжок (Старт)(shift)
    [256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок (Полёт)(shift)
    [512 + 32] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(shift)	
    [128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок (Старт)(ctrl+shift)
    [256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок (Полёт)(ctrl+shift)
    [512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(ctrl+shift)	

    [128 + 16] = "lancew_legs_jump_start", -- > Прыжок (Старт)(ctrl)
    [256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок (Полёт)(ctrl)
    [512 + 16] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(ctrl)
    [128 + 32] = "lancew_legs_jump_start", -- > Прыжок (Старт)(shift)
    [256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок (Полёт)(shift)
    [512 + 32] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(shift)	
    [128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок (Старт)(ctrl+shift)
    [256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок (Полёт)(ctrl+shift)
    [512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок (Приземление)(ctrl+shift)	

    [1 + 128] = "lancew_legs_jump_start", -- > Прыжок+Вперёд (Старт)
    [1 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Вперёд (Полёт)
    [1 + 512] = "lancew_legs_jump_end", -- > Прыжок+Вперёд (Приземление)	
    [1 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Вперёд (Старт)(ctrl)
    [1 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд (Полёт)(ctrl)
    [1 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Вперёд (Приземление)(ctrl)
    [1 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Вперёд (Старт)(shift)
    [1 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд (Полёт)(shift)
    [1 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд (Приземление)(shift)	
    [1 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Вперёд (Старт)(ctrl+shift)
    [1 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Вперёд (Полёт)(ctrl+shift)
    [1 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд (Приземление)(ctrl+shift)	

    [2 + 128] = "lancew_legs_jump_start", -- > Прыжок+Назад (Старт)
    [2 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Назад (Полёт)
    [2 + 512] = "lancew_legs_jump_end", -- > Прыжок+Назад (Приземление)		
    [2 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Назад (Старт)(ctrl)
    [2 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад (Полёт)(ctrl)
    [2 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Назад (Приземление)(ctrl)
    [2 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Назад (Старт)(shift)
    [2 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад (Полёт)(shift)
    [2 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад (Приземление)(shift)	
    [2 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Назад (Старт)(ctrl+shift)
    [2 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Назад (Полёт)(ctrl+shift)
    [2 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад (Приземление)(ctrl+shift)	

    [4 + 128] = "lancew_legs_jump_start", -- > Прыжок+Влево (Старт)
    [4 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Влево (Полёт)
    [4 + 512] = "lancew_legs_jump_end", -- > Прыжок+Влево (Приземление)		
    [4 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Влево (Старт)(ctrl)
    [4 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Влево (Полёт)(ctrl)
    [4 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Влево (Приземление)(ctrl)
    [4 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Влево (Старт)(shift)
    [4 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Влево (Полёт)(shift)
    [4 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Влево (Приземление)(shift)	
    [4 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Влево (Старт)(ctrl+shift)
    [4 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Влево (Полёт)(ctrl+shift)
    [4 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Влево (Приземление)(ctrl+shift)	

    [8 + 128] = "lancew_legs_jump_start", -- > Прыжок+Вправо (Старт)
    [8 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Вправо (Полёт)
    [8 + 512] = "lancew_legs_jump_end", -- > Прыжок+Вправо (Приземление)		
    [8 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Вправо (Старт)(ctrl)
    [8 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Вправо (Полёт)(ctrl)
    [8 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Вправо (Приземление)(ctrl)
    [8 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Вправо (Старт)(shift)
    [8 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Вправо (Полёт)(shift)
    [8 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вправо (Приземление)(shift)	
    [8 + 128 + 16 + 32] = "lancew_legs_jump_start", -- > Прыжок+Вправо (Старт)(ctrl+shift)
    [8 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Вправо (Полёт)(ctrl+shift)
    [8 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вправо (Приземление)(ctrl+shift)	

    [1 + 4 + 128] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Влево (Старт)
    [1 + 4 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Вперёд+Влево (Полёт)
    [1 + 4 + 512] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Влево (Приземление)	
    [1 + 4 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Влево (Старт)(ctrl)
    [1 + 4 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд+Влево (Полёт)(ctrl)
    [1 + 4 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Влево (Приземление)(ctrl)
    [1 + 4 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Влево (Старт)(shift)
    [1 + 4 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд+Влево (Полёт)(shift)
    [1 + 4 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Влево (Приземление)(shift)	
    [1 + 4 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Вперёд+Влево (Старт)(ctrl+shift)
    [1 + 4 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Вперёд+Влево (Полёт)(ctrl+shift)
    [1 + 4 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Влево (Приземление)(ctrl+shift)	

    [1 + 8 + 128] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Вправо (Старт)
    [1 + 8 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Вперёд+Вправо (Полёт)
    [1 + 8 + 512] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Вправо (Приземление)	
    [1 + 8 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Вправо (Старт)(ctrl)
    [1 + 8 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд+Вправо (Полёт)(ctrl)
    [1 + 8 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Вправо (Приземление)(ctrl)
    [1 + 8 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Вперёд+Вправо (Старт)(shift)
    [1 + 8 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Вперёд+Вправо (Полёт)(shift)
    [1 + 8 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Вправо (Приземление)(shift)	
    [1 + 8 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Вперёд+Вправо (Старт)(ctrl+shift)
    [1 + 8 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Вперёд+Вправо (Полёт)(ctrl+shift)
    [1 + 8 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Вперёд+Вправо (Приземление)(ctrl+shift)	

    [2 + 4 + 128] = "lancew_legs_jump_start", -- > Прыжок+Назад+Влево (Старт)
    [2 + 4 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Назад+Влево (Полёт)
    [2 + 4 + 512] = "lancew_legs_jump_end", -- > Прыжок+Назад+Влево (Приземление)	
    [2 + 4 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Назад+Влево (Старт)(ctrl)
    [2 + 4 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад+Влево (Полёт)(ctrl)
    [2 + 4 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Назад+Влево (Приземление)(ctrl)
    [2 + 4 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Назад+Влево (Старт)(shift)
    [2 + 4 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад+Влево (Полёт)(shift)
    [2 + 4 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад+Влево (Приземление)(shift)	
    [2 + 4 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Назад+Влево (Старт)(ctrl+shift)
    [2 + 4 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Назад+Влево (Полёт)(ctrl+shift)
    [2 + 4 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад+Влево (Приземление)(ctrl+shift)

    [2 + 8 + 128] = "lancew_legs_jump_start", -- > Прыжок+Назад+Вправо (Старт)
    [2 + 8 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Назад+Вправо (Полёт)
    [2 + 8 + 512] = "lancew_legs_jump_end", -- > Прыжок+Назад+Вправо (Приземление)	
    [2 + 8 + 128 + 16] = "lancew_legs_jump_start", -- > Прыжок+Назад+Вправо (Старт)(ctrl)
    [2 + 8 + 256 + 16] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад+Вправо (Полёт)(ctrl)
    [2 + 8 + 512 + 16] = "lancew_legs_jump_end", -- > Прыжок+Назад+Вправо (Приземление)(ctrl)
    [2 + 8 + 128 + 32] = "lancew_legs_jump_start", -- > Прыжок+Назад+Вправо (Старт)(shift)
    [2 + 8 + 256 + 32] = "lancew_legs_jump_idle_c", -- > Прыжок+Назад+Вправо (Полёт)(shift)
    [2 + 8 + 512 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад+Вправо (Приземление)(shift)	
    [2 + 8 + 128 + 16 + 32] = "lancew_legs_jump_start_sc", -- > Прыжок+Назад+Вправо (Старт)(ctrl+shift)
    [2 + 8 + 256 + 16 + 32] = "lancew_legs_jump_idle_sc", -- > Прыжок+Назад+Вправо (Полёт)(ctrl+shift)
    [2 + 8 + 512 + 16 + 32] = "lancew_legs_jump_end", -- > Прыжок+Назад+Вправо (Приземление)(ctrl+shift)

    [4096 + 128] = "lancew_legs_jump_start", -- > Прыжок+Бег (Старт)
    [4096 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Бег (Полёт)
    [4096 + 512] = "lancew_legs_jump_end", -- > Прыжок+Бег (Приземление)	
    [1 + 4096 + 128] = "lancew_legs_jump_start", -- > Прыжок+Бег (Старт)
    [1 + 4096 + 256] = "lancew_legs_jump_idle", -- > Прыжок+Бег (Полёт)
    [1 + 4096 + 512] = "lancew_legs_jump_end", -- > Прыжок+Бег (Приземление)

    [1] = "lancew_legs_moving", -- > Вперёд	
    [1 + 4] = "lancew_legs_moving_fl", -- > Вперёд+Влево
    [1 + 8] = "lancew_legs_moving_fr", -- > Вперёд+Вправо
    [1 + 16] = "lancew_legs_moving_c", -- > Вперёд (ctrl)
    [1 + 4 + 16] = "lancew_legs_moving_fl_c", -- > Вперёд+Влево  (ctrl)
    [1 + 8 + 16] = "lancew_legs_moving_fr_c", -- > Вперёд+Вправо (ctrl)
    [1 + 32] = "lancew_legs_walk", -- > Вперёд (shift)
    [1 + 4 + 32] = "lancew_legs_walk_l", -- > Вперёд+Влево  (shift)
    [1 + 8 + 32] = "lancew_legs_walk_r", -- > Вперёд+Вправо (shift)
    [1 + 16 + 32] = "lancew_legs_walk_sc", -- > Вперёд (ctrl+shift)
    [1 + 4 + 16 + 32] = "lancew_legs_walk_fl_sc", -- > Вперёд+Влево  (ctrl+shift)
    [1 + 8 + 16 + 32] = "lancew_legs_walk_fr_sc", -- > Вперёд+Вправо (ctrl+shift)

    [2] = "lancew_legs_moving_b", -- > Назад	
    [2 + 4] = "lancew_legs_moving_bl", -- > Назад+Влево
    [2 + 8] = "lancew_legs_moving_br", -- > Назад+Вправо
    [2 + 16] = "lancew_legs_moving_b_c", -- > Назад (ctrl)
    [2 + 4 + 16] = "lancew_legs_moving_bl_c", -- > Назад+Влево  (ctrl)
    [2 + 8 + 16] = "lancew_legs_moving_br_c", -- > Назад+Вправо (ctrl)
    [2 + 32] = "lancew_legs_walk_b", -- > Назад (shift)
    [2 + 4 + 32] = "lancew_legs_walk_bl", -- > Назад+Влево  (shift)
    [2 + 8 + 32] = "lancew_legs_walk_br", -- > Назад+Вправо (shift)
    [2 + 16 + 32] = "lancew_legs_walk_b_sc", -- > Назад (ctrl+shift)
    [2 + 4 + 16 + 32] = "lancew_legs_walk_bl_sc", -- > Назад+Влево  (ctrl+shift)
    [2 + 8 + 16 + 32] = "lancew_legs_walk_br_sc", -- > Назад+Вправо (ctrl+shift)

    [4] = "lancew_legs_moving_l", -- > Влево	
    [4 + 16] = "lancew_legs_moving_l_c", -- > Влево (ctrl)
    [4 + 32] = "lancew_legs_walk_l", -- > Влево (shift)
    [4 + 16 + 32] = "lancew_legs_walk_l_sc", -- > Влево (ctrl+shift)

    [8] = "lancew_legs_moving_r", -- > Вправо	
    [8 + 16] = "lancew_legs_moving_r_c", -- > Вправо (ctrl)
    [8 + 32] = "lancew_legs_walk_r", -- > Вправо (shift)
    [8 + 16 + 32] = "lancew_legs_walk_r_sc", -- > Вправо (ctrl+shift)

    [2048] = "lancew_legs_idle", -- > Болтаемся на лестнице
    [2048 + 1] = "lancew_legs_moving_c", -- > Двигаемся по лестнице вверх
    [2048 + 2] = "lancew_legs_moving_b_c" -- > Двигаемся по лестнице вниз
}

local actor_move_states = {
    ['mcFwd'] = 1,
    ['mcBack'] = 2,
    ['mcLStrafe'] = 4,
    ['mcRStrafe'] = 8,
    ['mcCrouch'] = 16,
    ['mcAccel'] = 32,
    ['mcTurn'] = 64,
    ['mcJump'] = 128,
    ['mcFall'] = 256,
    ['mcLanding'] = 512,
    ['mcLanding2'] = 1024,
    ['mcClimb'] = 2048,
    ['mcSprint'] = 4096,
    ['mcLLookout'] = 8192,
    ['mcRLookout'] = 16384,

    ['mcAnyMove'] = 15,
    ['mcAnyAction'] = 1935,
    ['mcAnyState'] = 6192,
    ['mcLookout'] = 24576
}
function IsMoveState(state, compare_state)
    local bit = actor_move_states[state]
    if (not bit) then
        return false
    end

    if (not compare_state) then
        compare_state = get_actor_obj():get_body_state()
    end

    return (bit_and(compare_state, bit) ~= 0)
end

function hidden_legs()
    hidden = true
    return true
end

function show_legs()
    hidden = false
    return true
end

materials = {"wood", "earth", "metal", "water", "tin", "grass", "gravel", "asphalt"}

current_mat = "default"

function get_material(mat)

    local sf = string.find
    local current = tostring(mat)

    for n, val in next, materials do
        if sf(current, val) then
            current_mat = val
            break
        else
            current_mat = "default"
        end
    end

end

-- \\ Апдейт игрока 
function actor_update()

    -- \\ Получаем флаг текущего состояния тела ГГ из памяти и разбираем его
    local body_flag = get_actor_obj():get_body_state()

    local iBite = 1

    for i = 1, 16 do
        if body_flag then
            actor_flags[i] = (bit_and(body_flag, iBite) ~= 0)
            iBite = iBite * 2
        else
            actor_flags[i] = false
        end
    end

    -- \\ Проверяем что нужно спавнить ноги
    if se_legs.LegsTbl[level.name()] == nil and CanShowLegs() then
        alife():create(LEGS_SECTION, db.actor:position(), 1, db.actor:game_vertex_id())
    end

end

-- \\ Проверяем что мы можем спавнить и показывать ноги

function CanShowLegs()

    -- * Проверяем что мы не улетели далеко, и что мы не на лестнице
    local abp = db.actor:bone_position("bip01_head")
    if device().cam_pos:distance_to_sqr(abp) > (HIDE_DISTANCE * HIDE_DISTANCE) or not db.actor:alive() or
        actor_flags[12] == true or hidden == true or disabled == true then
        return false
    end

    return true
end

function delete()

    local t = {}

    for id, sobj in alife():objects() do
        if sobj:clsid() == clsid.legs_s then
            table.insert(t, sobj)
        end
    end

    for _, sobj in ipairs(t) do
        alife():release(sobj)
    end

end

function actor_item_to_slot(item)
    if item:is_outfit() then
        swm_current_outfit[item:id()] = true
        hidden = true

        local sec = item:section()
        local legs_section = get_string(sec, "legs")

        if legs_section and sys_ini:section_exist(legs_section) and sys_ini:line_exist(legs_section, "visual") then
            LEGS_SECTION = legs_section
        else
            LEGS_SECTION = "actor_legs"
        end

        dsh.exec_on_update(function()
            show_legs()
        end)

    end
end

function reset_legs_model()
    hidden = true
    LEGS_SECTION = "actor_legs"

    dsh.exec_on_update(function()
        show_legs()
    end)

    return true
end

function actor_item_to_ruck(item)
    if swm_current_outfit[item:id()] == true then
        if 1 == 1 then -- kind == "o_light" or kind == "o_medium" or kind == "o_heavy" or kind == "o_sci"
            swm_current_outfit[item:id()] = nil
            reset_legs_model()
        end
    end

end

function load_settings()

    local defaults = {
        ["hide_legs_low_crouch"] = false,
        ["legs_offset"] = -0.65,
        ["legs_offset_side"] = 0,
        ["disabled"] = false
    }

    DISTANCE_MOD_FWD = defaults["legs_offset"]
    DISTANCE_MOD_RGT = defaults["legs_offset_side"]
    hide_legs_low_crouch = defaults["hide_legs_low_crouch"]
    disabled = defaults["disabled"]

    if disabled then
        delete()
    end

end

-- \\ Биндер ног
function bind(obj)
    local new_binder = legs_binder(obj)
    obj:bind_object(new_binder)
end

class "legs_binder"(object_binder)

function legs_binder:__init(obj)
    super(obj)
    self.id = self.object:id()
    self.object:set_fastcall(self.fastcall, self)
    self.VisualUpdateCnt = 0
    self.current_visual = nil -- > Текущий визуал
    self.current_anim = nil -- > Текущая анимация
    self.lastActorPos = nil
    self.posTimer = 0
    self.lastTurnTime = 0 -- > Время, когда последний раз была вклчюена анимация поворота
    self.turnAnim = "lancew_legs_turn_left"
end

-- \\ Быстрый апдейт позиции и дирекции ног
function legs_binder:fastcall()

    xr_logic.mob_capture(self.object, true)
    self.object.health = 1

    -- \\ Получаем флаг текущего состояния тела ГГ из памяти и разбираем его
    local body_flag = get_actor_obj():get_body_state()

    -- \\ Вычитаем из флага состояния игрока ненужные нам флаги
    for key, numb in pairs(DISABLED_FLAGS) do
        if actor_flags[key] then
            body_flag = body_flag - numb
        end
    end

    -- \\ Получаем текущую анимацию
    local anim_name = AnimTable[body_flag] or "lancew_legs_idle"

    -- \\ Устанавливаем позицию тела
    local pos = device().cam_pos
    local cdir = device().cam_dir
    local distance_H2B = device().cam_pos:distance_to(db.actor:position())

    if self.posTimer < time_global() and distance_H2B < 1.7 then -- > В падении модель игрока уходит вперёд камеры
        pos.y = db.actor:position().y
        self.posTimer = 0
    else
        local shift = 1.5
        if actor_flags[5] then -- > ctrl
            if actor_flags[6] then -- > shift
                shift = 0.95
            else
                shift = 1.23
            end
        end

        pos.y = pos.y - shift

        if self.posTimer == 0 then
            self.posTimer = time_global() + 1000
        end
    end

    pos.y = pos.y + HEIGHT

    local angle_down = cdir.y
    local dir_fwd

    if angle_down <= -0.75 then
        dir_fwd = vector():setHP(device().cam_top:getH(), 0)
    else
        dir_fwd = vector():setHP(device().cam_dir:getH(), 0)
    end

    local dir_rgt = vector():setHP(device().cam_right:getH(), 0)
    local dir_fwd_mod = DISTANCE_MOD_FWD
    local dir_rgt_mod = DISTANCE_MOD_RGT

    local shift_tbl = SPEC_SHIFT[anim_name]
    local shift_prone_tbl = SPEC_SHIFT_PRONE[anim_name]

    if shift_tbl then
        if shift_tbl.fwd then
            dir_fwd_mod = shift_tbl.fwd
        end
        if shift_tbl.rgt then
            dir_rgt_mod = shift_tbl.rgt
        end
    end

    if shift_prone_tbl and hide_legs_low_crouch and (IsMoveState('mcAccel') and IsMoveState('mcCrouch')) then
        if shift_prone_tbl.fwd then
            dir_fwd_mod = shift_prone_tbl.fwd
        end
        if shift_prone_tbl.rgt then
            dir_rgt_mod = shift_prone_tbl.rgt
        end
    end

    pos = pos:add(dir_fwd:mul(dir_fwd_mod))
    pos = pos:add(dir_rgt:mul(dir_rgt_mod))

    self.object:set_npc_position(pos, true)

    -- \\ Проверяем что камера не улетела далеко от головы
    local bHided = false

    if CanShowLegs() == false then
        -- self.object:force_visibility_state(0) --> Вылетало, если далеко от ГГ улететь
        bHided = true

        local sobj = alife():object(self.id)
        if sobj then
            alife():release(sobj, true)
        end

        se_legs.LegsTbl[level.name()] = nil
        return
    else
        -- self.object:force_visibility_state(2)		
    end

    ---\\ Проверяем что ГГ не улетел далеко от ног
    if self.lastActorPos then
        if bHided == false and db.actor:position():distance_to_sqr(self.lastActorPos) > (RSPN_DISTANCE * RSPN_DISTANCE) then
            self:respawn()
            return true
        end
    end

    self.lastActorPos = db.actor:position()

    -- \\ Устанавливаем взгляд
    if body_flag == 0 then
        if self.lastTurnTime >= time_global() then
            anim_name = self.turnAnim
        else
            local AngleBetween = calc_Y(db.actor:direction():getH(), self.object:direction():getH())

            if math.abs(AngleBetween) > 0.08 then
                if time_global() - self.lastTurnTime >= 500 then
                    self.lastTurnTime = time_global() + 500

                    if AngleBetween <= 0.0 then
                        self.turnAnim = "lancew_legs_turn_right"
                    else
                        self.turnAnim = "lancew_legs_turn_left"
                    end

                    anim_name = self.turnAnim
                end
            end
        end
    end

    local tDir
    if angle_down <= -0.75 then
        tDir = vector():setHP(device().cam_top:getH(), 0)
    else
        tDir = vector():setHP(device().cam_dir:getH(), 0)
    end

    local look_dir = look()
    look_dir:type(2)
    look_dir:direct(tDir)
    action(self.object, look_dir, cond(cond.look_end))

    -- \\ Проигрываем анимку
    if not bHided then
        if self.VisualUpdateCnt <= 0 then
            self:play_anim(anim_name)
        else
            self.VisualUpdateCnt = self.VisualUpdateCnt - 1
        end
    else
        self.object:clear_animations()
        self.VisualUpdateCnt = 5
    end
end

function legs_binder:respawn()
    local sobj = alife():object(self.id)
    if sobj then
        alife():release(sobj, true)
        se_legs.LegsTbl[level.name()] = nil
    end

    if not disabled then
        alife():create(LEGS_SECTION, db.actor:position(), 1, db.actor:game_vertex_id())
    end
    return true
end

function legs_binder:play_anim(anim_name)
    if self.current_anim ~= anim_name then
        self.object:play_cycle(anim_name, true)
        self.current_anim = anim_name
    end
end

-- from _u.script
-- * Расчёт разницы между двумя cam_dir:getH()
--  Да, у меня плохо с векторной алгеброй о_О
function calc_Y(new, old)
    local wL = 0
    local wR = 0

    if new < old then
        wR = old - new
        if new < 0 then
            wL = math.abs(-1.6 - new) + (4.8 - old)
        else
            wL = new + 1.6 + (4.8 - old)
        end
    else
        wL = new - old
        if old < 0 then
            wR = (4.8 - new) + math.abs(-1.6 - old)
        else
            wR = (4.8 - new) + math.abs(-1.6) + old
        end
    end

    if wL < wR then
        return wL
    end
    if wL > wR then
        return -wR
    end

    return 0
end
