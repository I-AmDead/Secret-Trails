local nagrad = {
  
  level_1 = {
  "ammo_9x39_sp5",
  "ammo_7.62x39_ap",
  "ammo_7.62x39_fmj",
  "ammo_5.45x39_ap",
  "ammo_5.45x39_fmj",
  "ammo_5.56x45_ap",
  "ammo_7.62x25_p",
  "ammo_7.62x25_ps",
  "ammo_5.56x45_ss190"
 },
  level_2 = {
  "af_electra_flash",
  "af_electra_moonlight",
  "af_ameba_mica",
  "af_dummy_spring",
  "af_dummy_dummy",
  "af_dummy_battery",
  "af_cristall",
  "gold_art",
  "af_soul",
  "af_dummy_pellicle",
  "af_rusty_kristall",
  "af_night_star",
  "af_gold_fish",
  "af_fuzz_kolobok",
  "af_rusty_sea-urchin",
  "af_dummy_glassbeads"
 },
  level_3 = {
  "wpn_sig552_isg_siber",
  "wpn_l85_m2",
  "wpn_abakan_n_m2",
  "wpn_desert_eagle",
  "wpn_mp153_m1",
  "wpn_groza_m1",
  "wpn_scar_siber_m1_black",
  "wpn_kiparis_s",
  "wpn_glock17_m1",
  "wpn_remington700_bas",
  "wpn_mp5_m1"
 },
  level_4 = {
  "wpn_fn57_bas",
  "wpn_scar_siber",
  "wpn_m4_butcher",
  "wpn_scar_siber_m2",
  "wpn_svd_m1",
  "wpn_gauss_bas"
 },
  level_5 = {
  "ammo_9x39_ap",
  "ammo_7.62x51_fmj",
  "ammo_7.62x51_ap",
  "ammo_7.62x54_7h14",
  "ammo_7.62x54_7h1",
  "ammo_7.62x54_ap",
  "ammo_gauss",
  "ammo_9x39_pab9"
 },
 level_6 = {
  "ammo_9x39_ap",
  "ammo_7.62x51_fmj",
  "ammo_7.62x51_ap",
  "ammo_7.62x54_7h14",
  "ammo_7.62x54_7h1",
  "ammo_7.62x54_ap",
  "ammo_7.62x39_ap",
  "ammo_7.62x39_fmj",
  "ammo_9x39_pab9",
  "ammo_7.62x25_p",
  "ammo_7.62x25_ps",
  "antirad",
  "medkit",
  "medkit_army",
  "medkit_scientic",
  "ammo_9x19_pbp",
  "ammo_9x19_fmj",
  "ammo_5.45x39_ap",
  "ammo_5.45x39_fmj",
  "ammo_5.56x45_ap",
  "ammo_5.56x45_ss190",
  "ammo_11.43x23_fmj",
  "ammo_11.43x23_hydro",
  "wpn_addon_silencer",
  "mutant_flesh_eye",
  "mutant_boar_leg",
  "mutant_dog_tail",
  "mutant_psevdodog_tail",
  "af_medusa",
  "af_blood",
  "af_drops",
  "grenade_f1",
  "grenade_rgd5",
  "ammo_og-7b",
  "ammo_vog-25p",
  "ammo_vog-25",
  "ammo_m209"
 }
}

local items_count=0
local itemin=nil

function item_much(itm,need_namber)
    local actor = db.actor
    items_count = 0
    itemin = itm
    actor:iterate_inventory(cheking_item,actor)
	if items_count >= need_namber then
		return true
	else
		return false
	end
end	

function cheking_item(actor,item)
    local items=item:section()
	if items==itemin then
		items_count=items_count+1
	end
end

function create_items(npc,section,number)
    for i=1,number do
        local obj = alife():create(section, npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
    end 
end

local reloc_params={}
local stalk

function out_item_much(itm_section,need_number)
	reloc_params.itm_section=itm_section
	reloc_params.itm_cnt=need_number
	reloc_params.itm_cnt_found=0
	db.actor:iterate_inventory(checkout_items_count,db.actor)
	reloc_params.itm_cnt_found=0
	if reloc_params.itm_cnt_found<=reloc_params.itm_cnt then
		db.actor:iterate_inventory(out_items_count,db.actor)
	end
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end

function checkout_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section then
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end
function out_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section and reloc_params.itm_cnt_found<reloc_params.itm_cnt then
		amk.remove_item_from_inventory(item, actor)
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end

--------------------------------------------------------------------------------------------------------
-- Mono Repair
--------------------------------------------------------------------------------------------------------

local weapon_profit_margin = 0.5
local armor_profit_margin = 0.6

function trader_repair_precond(trader, actor)
	local item_in_slot_1 = db.actor:item_in_slot(1)
	local item_in_slot_2 = db.actor:item_in_slot(2)
	local item_in_slot_6 = db.actor:item_in_slot(6)
	if ( item_in_slot_1 and item_in_slot_1:condition() < 1 )
	or ( item_in_slot_2 and item_in_slot_2:condition() < 1 )
	or ( item_in_slot_6 and item_in_slot_6:condition() < 1 ) then return true
	else return false
	end 
end

function trader_check_money_s1(trader, actor)
	local item_in_slot = db.actor:item_in_slot(1)
	if item_in_slot ~= nil then 
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * weapon_profit_margin )
		if item_repair_cost > 0 and db.actor:money() >= item_repair_cost and 1 > item_in_slot:condition() then
			return true
		end 
	end
	return false
end

function trader_check_money_s2(trader, actor)
	local item_in_slot = db.actor:item_in_slot(2)
	if item_in_slot ~= nil then 
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * weapon_profit_margin )
		if item_repair_cost > 0 and db.actor:money() >= item_repair_cost and 1 > item_in_slot:condition() then
			return true
		end 
	end
	return false
end

function trader_check_money_s6(trader, actor)
	local item_in_slot = db.actor:item_in_slot(6)
	if item_in_slot ~= nil then 
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		if item_repair_cost > 0 and db.actor:money() >= item_repair_cost and 1 > item_in_slot:condition() then
			return true
		end 
	end
	return false
end

function trader_repiar_weapon_s1(trader, actor)
	local item_in_slot = db.actor:item_in_slot(1)
	if item_in_slot ~= nil then
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * weapon_profit_margin )
		item_in_slot:set_condition(1)
		dialogs.relocate_money(actor, item_repair_cost, "out")
	end
end

function trader_repiar_weapon_s2(trader, actor)
	local item_in_slot = db.actor:item_in_slot(2)
	if item_in_slot ~= nil then
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * weapon_profit_margin )
		item_in_slot:set_condition(1)
		dialogs.relocate_money(actor, item_repair_cost, "out")
	end
end

function trader_repiar_armor_s6(trader, actor)
	local item_in_slot = db.actor:item_in_slot(6)
	if item_in_slot ~= nil then
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		amk_mod.repair_armor(1)
		dialogs.relocate_money(actor, item_repair_cost, "out")
	end	
end

function repair_costs(first_speaker, second_speaker)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	
	local item_name_and_price = ""
	local item_repair_cost = 0
	if db.actor ~= nil then 
		local item_in_slot_1 = db.actor:item_in_slot(1)
		local item_in_slot_2 = db.actor:item_in_slot(2)
		local item_in_slot_6 = db.actor:item_in_slot(6)
	
		if item_in_slot_1 ~= nil then 
			item_repair_cost = math.floor( (1-item_in_slot_1:condition()) * item_in_slot_1:cost() * weapon_profit_margin )
			if item_repair_cost > 0 then
				item_name_and_price = game.translate_string("list_trader_repair_0").." %c[255,238,155,23]"..item_repair_cost.." ������%c[default]"
				db.actor:give_talk_message(item_name_and_price, task_texture, task_rect, "other_iconed_answer_item")
			end
		end
		if item_in_slot_2 ~= nil then
			item_repair_cost = math.floor( (1-item_in_slot_2:condition()) * item_in_slot_2:cost() * weapon_profit_margin )
			if item_repair_cost > 0 then
				item_name_and_price = game.translate_string("list_trader_repair_1").." %c[255,238,155,23]"..item_repair_cost.." ������%c[default]"
				db.actor:give_talk_message(item_name_and_price, task_texture, task_rect, "other_iconed_answer_item")
			end
		end
		if item_in_slot_6 ~= nil then
			item_repair_cost = math.floor( (1-item_in_slot_6:condition()) * item_in_slot_6:cost() * armor_profit_margin )
			if item_repair_cost > 0 then
				item_name_and_price = game.translate_string("list_trader_repair_2").." %c[255,238,155,23]"..item_repair_cost.." ������%c[default]"
				db.actor:give_talk_message(item_name_and_price, task_texture, task_rect, "other_iconed_answer_item")
			end
		end
	end
end
--------------------------------------------------------------------------------------------------------
-- Mono Repair
--------------------------------------------------------------------------------------------------------

function af_cristall_flower_have()
    return new_dialog.item_much("af_cristall_flower",1) ~= false 
end

function af_blood_have()
    return new_dialog.item_much("af_blood",1) ~= false 
end

function af_night_star_have()
    return new_dialog.item_much("af_night_star",1) ~= false 
end

function af_soul_have()
    return new_dialog.item_much("af_soul",1) ~= false 
end

function af_dummy_spring_have()
    return new_dialog.item_much("af_dummy_spring",1) ~= false 
end

function af_cristall_have()
    return new_dialog.item_much("af_cristall",1) ~= false 
end

function af_gold_fish_have()
    return new_dialog.item_much("af_gold_fish",1) ~= false 
end

function af_mincer_meat_have()
    return new_dialog.item_much("af_mincer_meat",1) ~= false 
end

function af_gravi_have()
    return new_dialog.item_much("af_gravi",1) ~= false 
end

function af_cristall_flower_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 1)
	dialogs.relocate_item_section(first_speaker, "antirad", "in", 1)
	new_dialog.out_item_much("af_cristall_flower",1)
end

function af_blood_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
	new_dialog.out_item_much("af_blood",1)
end

function af_night_star_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in", 5)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in", 2)
	dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
	new_dialog.out_item_much("af_night_star",1)
end

function af_soul_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 5)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in", 3)
	new_dialog.out_item_much("af_soul",1)
end

function af_dummy_spring_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in", 5)
	dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
	new_dialog.out_item_much("af_dummy_spring",1)
end

function af_cristall_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_pab9", "in", 5)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
	new_dialog.out_item_much("af_cristall",1)
end

function af_gold_fish_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in", 5)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
	dialogs.relocate_item_section(first_speaker, "conserva", "in", 4)
	new_dialog.out_item_much("af_gold_fish",1)
end

function af_mincer_meat_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
	dialogs.relocate_item_section(first_speaker, "kolbasa", "in", 4)
	new_dialog.out_item_much("af_mincer_meat",1)
end

function af_gravi_otdal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 3)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
	dialogs.relocate_item_section(first_speaker, "kolbasa", "in", 4)
	new_dialog.out_item_much("af_gravi",1)
end

function start_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit", "in", 1)
	dialogs.relocate_item_section(first_speaker, "wpn_ak74u_n1", "in", 1)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 1)
    dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
	dialogs.relocate_item_section(first_speaker, "grenade_rgd5", "in", 1)
    db.actor:set_character_community ("monolith", 0, 0)
end

function haron_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
end

function haron_burer_have(task, info)
    if db.actor and db.actor:has_info("burer1_dead") 
	and db.actor:has_info("burer2_dead") 
	and db.actor:has_info("burer3_dead") 
	and db.actor:has_info("burer4_dead") 
	and db.actor:has_info("burer5_dead") 
	and db.actor:has_info("burer6_dead") ~= nil then
    return db.actor:give_info_portion("haron_burer_have") ~= nil   
    end
    return false
end

function pribor_haron_have(task, objective)
    return new_dialog.item_much("pribor_haron",1) ~= false
end

function haron_burer_done(first_speaker, second_speaker)
    new_dialog.out_item_much("pribor_haron",1)
end

function actor_5vodka_have()
    return new_dialog.item_much("vodka",5) ~= false 
end

function actor_5vodka_otdal(first_speaker, second_speaker)
	new_dialog.out_item_much("vodka",5)
	dialogs.relocate_item_section(first_speaker, "wpn_glock17_m1", "in", 1)
end

function actor_10conserva_have()
    return new_dialog.item_much("conserva",5) ~= false 
end

function actor_10conserva_otdal()
   new_dialog.out_item_much("conserva",5)
end

function actor_10device_pda_npc_have()
    return new_dialog.item_much("device_pda_npc",5) ~= false 
end

function actor_10device_pda_npc_otdal(first_speaker, second_speaker)
	new_dialog.out_item_much("device_pda_npc",5)
	dialogs.relocate_item_section(first_speaker, "wpn_addon_grenade_launcher", "in", 1)
    dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
end

function haron_need_stalker_have(task, info)
    if db.actor and db.actor:has_info("stalker_aes1_dead") 
	and db.actor:has_info("stalker_aes2_dead") 
	and db.actor:has_info("stalker_aes3_dead") 
	and db.actor:has_info("stalker_aes4_dead") 
	and db.actor:has_info("stalker_aes5_dead") 
	and db.actor:has_info("stalker_aes6_dead") then
    return db.actor:give_info_portion("haron_need_stalker_have") ~= nil   
    end
    return false
end

function haron_dal2(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
    dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
end


function tri_case_aes_have()
    return new_dialog.item_much("aes_case1",1) ~= false and                                                   new_dialog.item_much("aes_case2",1) ~= false  and 
    new_dialog.item_much("aes_case3",1) ~= false
end

function tri_case_aes_done(first_speaker, second_speaker)
	new_dialog.out_item_much("aes_case1",1)
	new_dialog.out_item_much("aes_case2",1)
	new_dialog.out_item_much("aes_case3",1)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in", 5)
end

function tri_snork_leg_have()
    return new_dialog.item_much("mutant_snork_leg",8) ~= false 
end

function tri_snork_leg_done(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_snork_leg",8)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 6)
end

function haron_dal3(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
	dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
	dialogs.relocate_item_section(first_speaker, "wpn_mp133_bas", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 1)
end

function control_monolit_have(task, info)
    if (db.actor:has_info("one_kontr_dead") 
	and db.actor:has_info("two_kontr_dead")) then
    return db.actor:give_info_portion("control_monolit_have") 
    end
    return false
end


function haron_naem_have(task, info)
    if (db.actor:has_info("har_naem1_dead") 
	and db.actor:has_info("har_naem2_dead") 
	and db.actor:has_info("har_naem3_dead") 
	and db.actor:has_info("har_naem4_dead") 
	and db.actor:has_info("har_naem5_dead") 
	and db.actor:has_info("har_naem6_dead") 
	and db.actor:has_info("har_naem7_dead") 
	and db.actor:has_info("har_naem8_dead") 
	and db.actor:has_info("har_naem9_dead") 
	and db.actor:has_info("har_naem10_dead") 
	and db.actor:has_info("har_naem11_dead") 
	and db.actor:has_info("har_naem12_dead") 
	and db.actor:has_info("har_naem13_dead") 
	and db.actor:has_info("har_naem14_dead") 
	and db.actor:has_info("har_naem15_dead") 
	and db.actor:has_info("har_naem16_dead") 
	and db.actor:has_info("har_naem17_dead") 
	and db.actor:has_info("har_naem18_dead") 
	and db.actor:has_info("har_naem19_dead") 
	and db.actor:has_info("har_naem20_dead")) then
    return db.actor:give_info_portion("haron_naem_have") 
    end
    return false
end

function mathon_naem_have(task, info)
    if (db.actor:has_info("math_naem1_dead") 
	and db.actor:has_info("math_naem2_dead") 
	and db.actor:has_info("math_naem3_dead") 
	and db.actor:has_info("math_naem4_dead") 
	and db.actor:has_info("math_naem5_dead") 
	and db.actor:has_info("math_naem6_dead") 
	and db.actor:has_info("math_naem7_dead") 
	and db.actor:has_info("math_naem8_dead") 
	and db.actor:has_info("math_naem9_dead") 
	and db.actor:has_info("math_naem10_dead")) then
    return db.actor:give_info_portion("mathon_naem_have") 
    end
    return false
end

function dyak_have(task, info)
    if (db.actor:has_info("military1_dead") 
	and db.actor:has_info("military2_dead") 
	and db.actor:has_info("military3_dead") 
	and db.actor:has_info("military4_dead") 
	and db.actor:has_info("military5_dead") 
	and db.actor:has_info("military6_dead")) then
    return db.actor:give_info_portion("dyak_have") 
    end
    return false
end

function seven_mutant_chimera_kogot_have()
    return new_dialog.item_much("mutant_dog_tail",10) ~= false 
end

function two_af_night_star_have()
    return new_dialog.item_much("af_night_star",2) ~= false 
end

function haron_doktor_have()
    return new_dialog.item_much("doctor_box",1) ~= false 
end


function chimera_kogot_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_dog_tail",10)
	dialogs.relocate_item_section(first_speaker, "doctor_box", "in", 1)
end

function two_night_star_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_night_star",2)
	dialogs.relocate_item_section(first_speaker, "doctor_box", "in", 1)
end

function dyak_dal(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_kiparis_s", "in", 1)
    dialogs.relocate_item_section(first_speaker, "kobra", "in", 1)
    dialogs.relocate_item_section(second_speaker, "ammo_9x18_fmj", "in", 4)
end

function haron_doktor_done()
  new_dialog.out_item_much("doctor_box",1)
end

function mathon_dal(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "detector_advances", "in", 1)
end

function tenflesh_eye_have()
    return new_dialog.item_much("mutant_flesh_eye",10) ~= false 
end

function tenboar_leg_have()
    return new_dialog.item_much("mutant_boar_leg",10) ~= false 
end

function tendog_tail_have()
    return new_dialog.item_much("mutant_dog_tail",10) ~= false 
end

function tenpsevdodog_tail_have()
    return new_dialog.item_much("mutant_psevdodog_tail",10) ~= false 
end

function tenkrovosos_jaw_have()
    return new_dialog.item_much("mutant_krovosos_jaw",10) ~= false 
end

function tenburer_hand_have()
    return new_dialog.item_much("mutant_burer_hand",10) ~= false 
end

function tenzombie_hand_have()
    return new_dialog.item_much("mutant_zombie_hand",10) ~= false 
end

function tensnork_leg_have()
    return new_dialog.item_much("mutant_snork_leg",10) ~= false 
end

function tenface_tushkano_have()
    return new_dialog.item_much("mutant_face_tushkano",10) ~= false 
end

function tenhand_kontroler_have()
    return new_dialog.item_much("mutant_hand_kontroler",10) ~= false 
end

function tenpsevdogigant_hand_have()
    return new_dialog.item_much("mutant_psevdogigant_hand",10) ~= false 
end

function tenchimera_kogot_have()
    return new_dialog.item_much("mutant_chimera_kogot",10) ~= false 
end

function tenflesh_eye_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_flesh_eye",10)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in", 4)
end

function tenboar_leg_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_boar_leg",10)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 4)
end

function tendog_tail_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_dog_tail",10)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 4)
end

function tenpsevdodog_tail_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_psevdodog_tail",10)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in", 4)
end

function tenkrovosos_jaw_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_krovosos_jaw",10)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in", 4)
end

function tenburer_hand_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_burer_hand",10)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 4)
end

function tenzombie_hand_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_zombie_hand",10)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
end

function tensnork_leg_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_snork_leg",10)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 4)
end

function tenface_tushkano_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_face_tushkano",10)
	dialogs.relocate_item_section(first_speaker, "ammo_9x18_pmm", "in", 5)
end

function tenhand_kontroler_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_hand_kontroler",10)
	dialogs.relocate_item_section(first_speaker, "antirad", "in", 5)
end

function tenpsevdogigant_hand_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_psevdogigant_hand",10)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 7)
end

function tenchimera_kogot_otdal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_chimera_kogot",10)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in", 5)
end

function solomon_food_have()
    return new_dialog.item_much("box_food",1) ~= false 
end

function solomon_medik_have()
    return new_dialog.item_much("box_remont",1) ~= false 
end

function solomon1_give(first_speaker, second_speaker)
    new_dialog.out_item_much("box_food",1)
    new_dialog.out_item_much("box_remont",1)
	dialogs.relocate_item_section(first_speaker, "eot", "in", 1)
end

function solomon2_give(first_speaker, second_speaker)
    new_dialog.out_item_much("box_food",1)
    new_dialog.out_item_much("box_remont",1)
	dialogs.relocate_item_section(first_speaker, "pso2", "in", 1)
end

function solomon3_give(first_speaker, second_speaker)
    new_dialog.out_item_much("box_food",1)
    new_dialog.out_item_much("box_remont",1)
	dialogs.relocate_item_section(first_speaker, "wpn_vz61_scorpion_m1", "in", 1)
end

function prizrak_zachita_have(task, info)
    if (db.actor:has_info("prizrak1_mo_dead") 
	and db.actor:has_info("prizrak2_mo_dead") 
	and db.actor:has_info("prizrak3_mo_dead") 
	and db.actor:has_info("prizrak4_mo_dead") 
	and db.actor:has_info("prizrak5_mo_dead") 
	and db.actor:has_info("prizrak6_mo_dead")) then
    return db.actor:give_info_portion("prizrak_zachita_have") 
    end
    return false
end

function monolit_bunker_doc_have()
    return new_dialog.item_much("shceme_document",1) ~= false 
end

function monolit_bunker_doc_done()
  new_dialog.out_item_much("shceme_document",1)
end

function kliyk_done(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 3)
   dialogs.relocate_item_section(first_speaker, "wpn_gravigun", "in", 1)
end

function aes_solomon_dal(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "wpn_mp153_bas", "in", 1)
   dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)	
   dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)   
   dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 12)
   give_weapons()
end

function aes_solomon_posylka(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "solomon_box", "in", 1)
end

function solomon_box_have()
    return new_dialog.item_much("solomon_box",1) ~= false 
end

function solomon_af_cristall_have()
    return new_dialog.item_much("af_cristall",2) ~= false 
end

function solomon_af_dummy_pellicle_have()
    return new_dialog.item_much("af_dummy_pellicle",2) ~= false 
end

function solomon_box_kri_done()
  new_dialog.out_item_much("solomon_box",1)
  new_dialog.out_item_much("af_cristall",2)
end

function solomon_box_plen_done()
  new_dialog.out_item_much("solomon_box",1)
  new_dialog.out_item_much("af_dummy_pellicle",2)
end

function give_weapons()
    local npc, obj
	
	for i=0,65534 do 
        npc = level.object_by_id(i)
        if npc and npc:name() == "aes_solomon" then 
            obj = alife():object(npc:id()) 
        end
    end
	
	alife():create_ammo("ammo_9x39_ap",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id,30)
	alife():create("wpn_val_tac",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
    alife():create_ammo("ammo_9x39_ap",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id,30)
end

function atp_zahar_help_have(task, info)
    if (db.actor:has_info("atp_psevdo1_dead") 
	and db.actor:has_info("atp_psevdo2_dead") 
	and db.actor:has_info("atp_psevdo3_dead") 
	and db.actor:has_info("atp_psevdo4_dead") 
	and db.actor:has_info("atp_psevdo5_dead") 
	and db.actor:has_info("atp_psevdo6_dead")) then
    return db.actor:give_info_portion("atp_zahar_help_have") 
    end
    return false
end

function atp_zahar_help_done(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "antirad", "in", 1)	
   dialogs.relocate_item_section(first_speaker, "medkit", "in", 3)   
   dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 6)
end

function friend_krovosos_have(task, info)
    if (db.actor:has_info("atp_boar1_dead") 
	and db.actor:has_info("atp_boar2_dead") 
	and db.actor:has_info("atp_boar3_dead") 
	and db.actor:has_info("atp_boar4_dead") 
	and db.actor:has_info("atp_boar5_dead") 
	and db.actor:has_info("atp_boar6_dead")) then
    return db.actor:give_info_portion("friend_krovosos_have") 
    end
    return false
end

function atp_bandit_zahar_have(task, info)
    if (db.actor:has_info("atp_bandit1_dead") 
	and db.actor:has_info("atp_bandit2_dead") 
	and db.actor:has_info("atp_bandit3_dead") 
	and db.actor:has_info("atp_bandit4_dead") 
	and db.actor:has_info("atp_bandit5_dead") 
	and db.actor:has_info("atp_bandit6_dead") 
	and db.actor:has_info("atp_bandit7_dead")) then
    return db.actor:give_info_portion("atp_bandit_zahar_have") 
    end
    return false
end

function atp_bandit_zahar_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "antirad", "in", 3)
end

function zahar_vosem_dog_tail_have()
    return new_dialog.item_much("mutant_dog_tail",8) ~= false 
end

function zahar_vosem_dog_tail_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_dog_tail",8)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
end

function zahar_six_boar_leg_have()
    return new_dialog.item_much("mutant_boar_leg",6) ~= false 
end

function zahar_six_boar_leg_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_boar_leg",6)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
end

function zahar_six_chimera_kogot_have()
    return new_dialog.item_much("mutant_chimera_kogot",6) ~= false 
end

function zahar_six_chimera_kogot_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_chimera_kogot",6)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
end

function zahar_two_af_vyvert_have()
    return new_dialog.item_much("af_vyvert",2) ~= false 
end

function zahar_two_af_vyvert_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_vyvert",2)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
end

function zahar_vosem_psevdodog_tail_have()
    return new_dialog.item_much("mutant_psevdodog_tail",8) ~= false 
end

function zahar_vosem_psevdodog_tail_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_psevdodog_tail",8)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 3)
end

function zahar_af_ameba_slug_have()
    return new_dialog.item_much("af_ameba_slug",1) ~= false 
end

function zahar_af_ameba_slug_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_ameba_slug",1)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 3)
end

function zahar_af_cristall_flower_have()
    return new_dialog.item_much("af_cristall_flower",1) ~= false 
end

function zahar_af_cristall_flower_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_cristall_flower",1)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 3)
end

function zahar_af_gravi_have()
    return new_dialog.item_much("af_gravi",1) ~= false 
end

function zahar_af_gravi_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_gravi",1)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 3)
end

function zahar_six_krovosos_jaw_have()
    return new_dialog.item_much("mutant_krovosos_jaw",6) ~= false 
end

function zahar_six_krovosos_jaw_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("mutant_krovosos_jaw",6)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
end

function zahar_af_mincer_meat_have()
    return new_dialog.item_much("af_mincer_meat",1) ~= false 
end

function zahar_af_mincer_meat_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_mincer_meat",1)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
end

function zahar_two_af_ameba_slime_have()
    return new_dialog.item_much("af_ameba_slime",2) ~= false 
end

function zahar_two_af_ameba_slime_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_ameba_slime",2)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
end

function zahar_two_af_medusa_have()
    return new_dialog.item_much("af_medusa",2) ~= false 
end

function zahar_two_af_medusa_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_medusa",2)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
end

function zahar_pismo_have()
    return new_dialog.item_much("zahar_pismo",1) ~= false 
end

function zahar_pismo_vzal(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "zahar_pismo", "in", 1)
end

function zahar_pismo_otdal()
    new_dialog.out_item_much("zahar_pismo",1)
end

function mil_lucash_help_have(task, info)
    if db.actor:has_info("lucash_na_meste") then
    return db.actor:give_info_portion("mil_lucash_help_have") 
    end
    return false
end

function mil_lucash_barier_have(task, info)
    if (db.actor:has_info("mil_barier_one") 
	and db.actor:has_info("mil_barier_two") 
	and db.actor:has_info("mil_barier_tri") 
	and db.actor:has_info("mil_barier_four") 
	and db.actor:has_info("mil_barier_five") 
	and db.actor:has_info("keb_na_meste")) then
    return db.actor:give_info_portion("mil_lucash_barier_have") 
    end
    return false
end

function mil_lucash_barier_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_m4_ru556", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 5)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
end

function inform_20_pda_have()
    return new_dialog.item_much("device_pda_npc",10) ~= false 
end

function inform_40_pda_have()
    return new_dialog.item_much("device_pda_npc",20) ~= false 
end

function inform_20_pda(first_speaker, second_speaker)
	item = nagrad.level_6[math.random(table.getn(nagrad.level_6))]
	new_dialog.out_item_much("device_pda_npc",10)
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function inform_40_pda()
    new_dialog.out_item_much("device_pda_npc",20) 
end

function trader_bratok_saiga(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_mincer_meat", "out", 2)
	dialogs.relocate_item_section(first_speaker, "wpn_saiga12s_isg", "in", 1)
end

function trader_bratok_ak_47(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_ameba_mica", "out", 2)
	dialogs.relocate_item_section(first_speaker, "wpn_akms_bas", "in", 1)
end

function trader_bratok_762x39_fmj(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "conserva", "out", 5)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_fmj", "in", 3)
end

function trader_bratok_762x39_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "vodka", "out", 4)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in", 3)
end

function trader_bratok_545x39_fmj(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "bread", "out", 5)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
end

function trader_bratok_545x39_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "vodka", "out", 4)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in", 3)
end

function trader_bratok_556x45_ss190(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kolbasa", "out", 5)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 3)
end

function trader_bratok_556x45_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "vodka", "out", 4)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 3)
end

function trader_bratok_762x54_7h1(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_cristall_flower", "out", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h1", "in", 3)
end

function trader_bratok_9x39_pab9(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_ameba_slug", "out", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_pab9", "in", 3)
end

function five_vodka_have()
    return new_dialog.item_much("vodka",5) ~= false 
end


function four_vodka_have()
    return new_dialog.item_much("vodka",4) ~= false 
end

function tri_vodka_have()
    return new_dialog.item_much("vodka",3) ~= false 
end

function five_bread_have()
    return new_dialog.item_much("bread",5) ~= false 
end

function five_kolbasa_have()
    return new_dialog.item_much("kolbasa",5) ~= false 
end

function five_conserva_have()
    return new_dialog.item_much("conserva",5) ~= false 
end

function one_af_cristall_flower_have()
    return new_dialog.item_much("af_cristall_flower",1) ~= false 
end

function one_af_ameba_slug_have()
    return new_dialog.item_much("af_ameba_slug",1) ~= false 
end

function two_af_mincer_meat_have()
    return new_dialog.item_much("af_mincer_meat",2) ~= false 
end

function two_af_ameba_mica_have()
    return new_dialog.item_much("af_ameba_mica",2) ~= false 
end

function mil_osvedomitel_have()
    return new_dialog.item_much("informator_doc",1) ~= false 
end

function mil_osvedomitel_done()
    new_dialog.out_item_much("informator_doc",1) 
end

function osvedomitel_help(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 5)
	dialogs.relocate_item_section(first_speaker, "kolbasa", "in", 5)
	dialogs.relocate_item_section(first_speaker, "vodka", "in", 5)
	dialogs.relocate_item_section(first_speaker, "conserva", "in", 5)
end

function osvedomitel_help_have()
    return new_dialog.item_much("medkit",5) ~= false and                                                   new_dialog.item_much("kolbasa",5) ~= false  and 
    new_dialog.item_much("vodka",5) ~= false and                                                      
    new_dialog.item_much("conserva",5) ~= false
end

function radar_help_russia(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
    new_dialog.out_item_much("medkit",5) 
    new_dialog.out_item_much("vodka",5)
    new_dialog.out_item_much("kolbasa",5)
    new_dialog.out_item_much("conserva",5)
end

function radar_help_nato(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 5)
    new_dialog.out_item_much("medkit",5) 
    new_dialog.out_item_much("vodka",5)
    new_dialog.out_item_much("kolbasa",5)
    new_dialog.out_item_much("conserva",5)
end

function sveeblov_krovosos_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 5)
end

function sveeblov_predatel_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_k98_mod", "in", 1)
    dialogs.relocate_item_section(first_speaker, "ammo_7.92x33_fmj", "in", 1)
end

function sveeblov_lab_have()
    return new_dialog.item_much("labx10_doc",1) ~= false and
    new_dialog.item_much("labx10_computer",1) ~= false
end                                 

function sveeblov_lab_done()
    new_dialog.out_item_much("labx10_doc",1) 
    new_dialog.out_item_much("labx10_computer",1)
end

function bes_help_levsha_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 5)
end

function levsha_need_outfit_have(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit") and db.actor:object("merc_scientific_outfit"):condition() and db.actor:object("merc_scientific_outfit"):condition()>0.95 then
			return true
		end
	end
	return false
end

function levsha_need_groza_have(task, objective) 
	if db.actor then
		if db.actor:object("wpn_groza") and db.actor:object("wpn_groza"):condition() and db.actor:object("wpn_groza"):condition()>0.95 then
			return true
		end
	end
	return false
end

function levsha_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_groza", "out", 1)
	dialogs.relocate_item_section(second_speaker, "merc_scientific_outfit", "out", 1)
end

function lucash_need_levsha_done(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "acog", "in", 1)
   dialogs.relocate_item_section(first_speaker, "wpn_sil_m42k", "in", 1)
   dialogs.relocate_item_section(first_speaker, "antirad", "in", 2)
end

function knyaz_zadan_have()
    return new_dialog.item_much("wpn_winchester_knyaz",1) ~= false 
end

function knyaz_zadan_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_winchester_knyaz", "out", 1)
end

function dolg_leader_help_have(task, info)
    if db.actor and db.actor:has_info("val_atak_bandit1_dead") 
	and db.actor:has_info("val_atak_bandit2_dead") 
	and db.actor:has_info("val_atak_bandit3_dead") 
	and db.actor:has_info("val_atak_bandit4_dead") 
	and db.actor:has_info("val_atak_bandit5_dead") 
	and db.actor:has_info("val_atak_bandit6_dead") 
	and db.actor:has_info("val_atak_bandit7_dead") 
	and db.actor:has_info("val_atak_bandit8_dead") 
	and db.actor:has_info("val_atak_bandit9_dead") 
	and db.actor:has_info("val_atak_bandit10_dead") 
	and db.actor:has_info("val_atak_bandit11_dead") 
	and db.actor:has_info("val_atak_bandit12_dead") 
	and db.actor:has_info("val_atak_bandit13_dead") 
	and db.actor:has_info("val_atak_bandit14_dead") 
	and db.actor:has_info("val_atak_bandit15_dead") then
    return db.actor:give_info_portion("dolg_leader_help_have")    
    end
    return false
end

function dolg_leader_help_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_abakan_n_m2", "in", 1)
    dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
end

function petr_af_medusa_have()
    return new_dialog.item_much("af_medusa",1) ~= false 
end

function petr_af_medusa_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_medusa",1)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in", 3)
end

function petr_af_mincer_meat_have()
    return new_dialog.item_much("af_mincer_meat",1) ~= false 
end

function petr_af_mincer_meat_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_mincer_meat",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in", 3)
end

function petr_af_electra_flash_have()
    return new_dialog.item_much("af_electra_flash",1) ~= false 
end

function petr_af_electra_flash_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_electra_flash",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in", 3)
end

function petr_af_gravi_have()
    return new_dialog.item_much("af_gravi",1) ~= false 
end

function petr_af_gravi_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_gravi",1)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_sp5", "in", 3)
end

function petr_two_af_electra_sparkler_have()
    return new_dialog.item_much("af_electra_sparkler",2) ~= false 
end

function petr_two_af_electra_sparkler_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_electra_sparkler",2)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in", 3)
end

function petr_two_af_gravi_have()
    return new_dialog.item_much("af_gravi",2) ~= false 
end

function petr_two_af_gravi_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_gravi",2)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan_n_m1", "in", 1)
end

function petr_two_af_rusty_sea_urchin_have()
    return new_dialog.item_much("af_rusty_sea-urchin",2) ~= false 
end

function petr_two_af_rusty_sea_urchin_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_rusty_sea-urchin",2)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan_n_m2", "in", 1)
end

function petr_tri_af_dummy_battery_have()
    return new_dialog.item_much("af_dummy_spring_red",2) ~= false 
end

function petr_tri_af_dummy_battery_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_dummy_spring_red",2)
	dialogs.relocate_item_section(first_speaker, "wpn_pk_siber", "in", 1)
end


function petr_tri_af_cristall_have()
    return new_dialog.item_much("af_dummy_battery_red",2) ~= false 
end

function petr_tri_af_cristall_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_dummy_battery_red",2)
	dialogs.relocate_item_section(first_speaker, "wpn_vintorez_isg", "in", 1)
end


function petr_two_af_cristall_flower_have()
    return new_dialog.item_much("af_cristall_flower",2) ~= false 
end

function petr_two_af_cristall_flower_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_cristall_flower",2)
	dialogs.relocate_item_section(first_speaker, "wpn_rpg7", "in", 1)
end

function petr_af_ameba_slug_have()
    return new_dialog.item_much("af_ameba_slug",1) ~= false 
end

function petr_af_ameba_slug_dal(first_speaker, second_speaker)
    new_dialog.out_item_much("af_ameba_slug",1)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 3)
end

function semeckii_treasure_est(task, info)
    if db.actor and db.actor:has_info("semeckii_treasure_part2") 
    and db.actor:has_info("semeckii_treasure_part3") 
    and db.actor:has_info("semeckii_treasure_part4") 
    and db.actor:has_info("semeckii_treasure_part5") 
    and db.actor:has_info("semeckii_treasure_part6") 
    and db.actor:has_info("semeckii_treasure_part7") 
    and db.actor:has_info("semeckii_treasure_part8") then
    return db.actor:give_info_portion("semeckii_treasure_est")    
    end
    return false
end

function knyaz_kill_dolg_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "af_medusa", "in", 1)
end

function knyaz_not_kill_dolg_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "af_dummy_glassbeads", "in", 1)
end

function af_fireball_two_have()
    return new_dialog.item_much("af_fireball",2) ~= false 
end

function af_fireball_two_dal()
   new_dialog.out_item_much("af_fireball",2)
end

function knyaz_plan_done(first_speaker, second_speaker)
	new_dialog.out_item_much("new_plan",1)
    dialogs.relocate_item_section(first_speaker, "wpn_saiga12s_m1", "in", 1)
end

function knyaz_plan_have()
    return new_dialog.item_much("new_plan",1) ~= false 
end

function varayg_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 1)
	dialogs.relocate_item_section(first_speaker, "bandage", "in", 1)
end

function varayg_priz(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_m4_tac", "in", 1)
	dialogs.relocate_item_section(first_speaker, "wpn_sil_m42k", "in", 1)
end

function bes_patron_start(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_l85_m3", "in", 2)
end

function bes_patron_begin(first_speaker, second_speaker)
	new_dialog.out_item_much("wpn_l85_m3",2)
    dialogs.relocate_item_section(first_speaker, "box_patron", "in", 1)
end

function bes_patron_have()
    return new_dialog.item_much("box_patron",1) ~= false 
end

function actor_wpn_have()
    return new_dialog.item_much("wpn_l85_m3",2) ~= false 
end

function bes_patron_done(first_speaker, second_speaker)
    item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
	new_dialog.out_item_much("box_patron",1)
end

function sahar_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sks_b_ucen", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ucen", "in", 3)
end

function sahar_have()
    return new_dialog.item_much("wpn_sks_b_ucen",1) ~= false 
end

function sahar_vzal()
    new_dialog.out_item_much("wpn_sks_b_ucen",1)
end

function ucen_need_metka_have(task, info)
    if db.actor and db.actor:has_info("ucen_need_metka_chimera_have") 
    and db.actor:has_info("ucen_need_metka_gigant_have") 
    and db.actor:has_info("ucen_need_metka_bloodsucker_have") then
    return db.actor:give_info_portion("ucen_need_metka_have")    
    end
    return false
end

function doronin_help_have(task, info)
    if db.actor and db.actor:has_info("doronin_dead") then
    return db.actor:give_info_portion("doronin_help_have")    
    end
    return false
end

function voronin_snork_have(task, info)
    if db.actor and db.actor:has_info("snork_voronin1_dead") 
	and db.actor:has_info("snork_voronin2_dead") 
	and db.actor:has_info("snork_voronin3_dead") 
	and db.actor:has_info("snork_voronin4_dead") 
	and db.actor:has_info("snork_voronin5_dead") 
	and db.actor:has_info("snork_voronin6_dead") 
	and db.actor:has_info("snork_voronin7_dead") 
	and db.actor:has_info("snork_voronin8_dead") 
	and db.actor:has_info("snork_voronin9_dead") 
	and db.actor:has_info("snork_voronin10_dead") 
	and db.actor:has_info("snork_voronin11_dead") 
	and db.actor:has_info("snork_voronin12_dead") then
    return db.actor:give_info_portion("voronin_snork_have")    
    end
    return false
end

function voronin_snork_done(first_speaker, second_speaker)
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function dan_zombi_have(task, info)
    if db.actor and db.actor:has_info("dan_zombied1_dead") 
	and db.actor:has_info("dan_zombied2_dead") 
	and db.actor:has_info("dan_zombied3_dead") 
	and db.actor:has_info("dan_zombied4_dead") 
	and db.actor:has_info("dan_zombied5_dead") then
    return db.actor:give_info_portion("dan_zombi_have")    
    end
    return false
end

function dan_zombi_done(first_speaker, second_speaker)
    local count = math.random(3,4)
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function dan_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_rg-6", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_vog-25", "in", 30)
end

function voronin_nychka_have()
    return new_dialog.item_much("wpn_abakan_n",10) ~= false and
	new_dialog.item_much("ammo_5.45x39_ap",15) ~= false and
	new_dialog.item_much("ammo_vog-25",15) ~= false
end

function voronin_nychka_done(first_speaker, second_speaker)
    local count = math.random(1,2)
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
	new_dialog.out_item_much("wpn_abakan_n",10)
	new_dialog.out_item_much("ammo_5.45x39_ap",15)
	new_dialog.out_item_much("ammo_vog-25",15)
end

function dan_mosin_have()
    return new_dialog.item_much("af_fireball",4) ~= false 
end

function dan_mosin_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_remington700_mod_x_gen3", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x51_ap", "in", 3)
	new_dialog.out_item_much("af_fireball",4)
end


function sahar_tri_af_drops_have()
    return new_dialog.item_much("af_drops",3) ~= false 
end

function sahar_tri_af_drops_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x51_fmj", "in", 2)
	new_dialog.out_item_much("af_drops",3)
end

function sahar_two_af_fireball_have()
    return new_dialog.item_much("af_fireball",2) ~= false 
end

function sahar_two_af_fireball_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x51_ap", "in", 2)
	new_dialog.out_item_much("af_fireball",2)
end

function sahar_af_dummy_pellicle_have()
    return new_dialog.item_much("af_dummy_pellicle",1) ~= false 
end

function sahar_af_dummy_pellicle_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in", 2)
	new_dialog.out_item_much("af_dummy_pellicle",1)
end

function sahar_tri_af_soul_have()
    return new_dialog.item_much("af_soul",1) ~= false 
end

function sahar_tri_af_soul_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_howa20", "in", 1)
	new_dialog.out_item_much("af_soul",1)
end

function sahar_tri_af_cristall_have()
    return new_dialog.item_much("af_cristall",1) ~= false 
end

function sahar_tri_af_cristall_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_g28", "in", 1)
	new_dialog.out_item_much("af_cristall",1)
end


function sahar_sorok_mutant_poltergeist_glas_have()
    return new_dialog.item_much("mutant_poltergeist_glas",10) ~= false 
end

function sahar_sorok_mutant_poltergeist_glas_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_rem700_mcmillan", "in", 1)
	new_dialog.out_item_much("mutant_poltergeist_glas",10)
end

function sahar_ten_mutant_tail_cat_have()
    return new_dialog.item_much("mutant_tail_cat",10) ~= false 
end

function sahar_ten_mutant_tail_cat_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in", 3)
	new_dialog.out_item_much("mutant_tail_cat",10)
end

function sahar_ten_mutant_burer_hand_have()
    return new_dialog.item_much("mutant_burer_hand",10) ~= false 
end

function sahar_ten_mutant_burer_hand_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in", 2)
	new_dialog.out_item_much("mutant_burer_hand",10)
end

function dan_racia_start(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "resiver", "in", 1)
end

function dan_racia_have()
    return new_dialog.item_much("resiver",1) ~= false 
end

function dan_racia_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 5)
	new_dialog.out_item_much("resiver",1)
end

function esc_tolik_help_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in", 1)
end

function volk_tainik_have()
    return new_dialog.item_much("volk_pda",1) ~= false and
	new_dialog.item_much("ammo_5.45x39_fmj",12) ~= false and
    new_dialog.item_much("wpn_ak74u_isg",6) ~= false
end

function volk_tainik_done()
    new_dialog.out_item_much("volk_pda",1)
end

function novice_weapon_have()
    return new_dialog.item_much("wpn_ak74u_n1",1) ~= false and
    new_dialog.item_much("ammo_5.45x39_fmj",2) ~= false 
end

function novice_weapon_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "ammo_5.45x39_fmj", "out", 2)
	dialogs.relocate_item_section(second_speaker, "wpn_ak74u_n1", "out", 1)
end

function derevna_stalker_have(task, info)
	if db.actor and db.actor:has_info("volk_na_mest") 
	and db.actor:has_info("volk_ban1_dead") 
	and db.actor:has_info("volk_ban2_dead") 
	and db.actor:has_info("volk_ban3_dead") 
	and db.actor:has_info("volk_ban4_dead") then
	return db.actor:give_info_portion("derevna_stalker_have")    
	end
	return false
end

function krest_razborka_have(task, info)
    if db.actor and db.actor:has_info("razbor_ban1_dead") 
	and db.actor:has_info("razbor_ban2_dead") 
	and db.actor:has_info("razbor_ban3_dead") 
	and db.actor:has_info("razbor_ban4_dead") 
	and db.actor:has_info("razbor_ban5_dead") then
	return db.actor:give_info_portion("krest_razborka_have")    
	end
	return false
end

function krest_razborka_done(first_speaker, second_speaker)
    local count = math.random(3,4)
	item = nagrad.level_5[math.random(table.getn(nagrad.level_5))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function kruglov_art_start(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "detector_kruglov", "in", 1)
end

function kruglov_art_have()
    return new_dialog.item_much("af_caterpillar",1) ~= false 
end

function kruglov_art_otdal(first_speaker, second_speaker)
    local count = math.random(2,3)
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
	new_dialog.out_item_much("af_caterpillar",1)
    new_dialog.out_item_much("detector_kruglov",1)
end

function kruglov_art_ostsvil()
    new_dialog.out_item_much("af_caterpillar",1)
end

function actor_bbb_have()
    return new_dialog.item_much("af_babka_3",1) ~= false 
end

function actor_bbb_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "detector_kruglov", "in", 1)
	new_dialog.out_item_much("af_babka_3",1)
end

function actor_af_caterpillar_have()
    return new_dialog.item_much("af_caterpillar",1) ~= false 
end

function actor_af_caterpillar_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "detector_elite", "in", 1)
	new_dialog.out_item_much("af_caterpillar",1)
end

function kruglov_change(first_speaker, second_speaker)
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
	new_dialog.out_item_much("af_caterpillar",1)
end

function informator_trade_semeckii_have()
    return new_dialog.item_much("af_spirit_4",1) ~= false 
end

function informator_trade_semeckii_done()
   new_dialog.out_item_much("af_spirit_4",1)
end

function informator_af_cry_have()
    return new_dialog.item_much("af_cry_3",2) ~= false 
end

function informator_af_cry_done()
   new_dialog.out_item_much("af_cry_3",2)
end

function sidr_forty_mutant_dog_tail_have()
    return new_dialog.item_much("mutant_dog_tail",40) ~= false 
end

function sidr_forty_mutant_dog_tail_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_kiparis_s", "in", 1)
	new_dialog.out_item_much("mutant_dog_tail",40)
end

function sidr_thihty_mutant_psevdodog_tail_have()
    return new_dialog.item_much("mutant_psevdodog_tail",30) ~= false 
end

function sidr_thihty_mutant_psevdodog_tail_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_mp153_m1", "in", 1)
	new_dialog.out_item_much("mutant_psevdodog_tail",30)
end

function sidr_twentyfife_mutant_krovosos_jaw_have()
    return new_dialog.item_much("mutant_krovosos_jaw",25) ~= false 
end

function sidr_twentyfife_mutant_krovosos_jaw_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_vz61_scorpion_m2", "in", 1)
	new_dialog.out_item_much("mutant_krovosos_jaw",25)
end

function sidr_six_mutant_chimera_kogot_have()
    return new_dialog.item_much("mutant_chimera_kogot",6) ~= false 
end

function sidr_six_mutant_chimera_kogot_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in", 3)
	new_dialog.out_item_much("mutant_chimera_kogot",6)
end

function sidr_six_mutant_boar_leg_have()
    return new_dialog.item_much("mutant_boar_leg",6) ~= false 
end

function sidr_six_mutant_boar_leg_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in", 3)
	new_dialog.out_item_much("mutant_boar_leg",6)
end

function sidr_six_mutant_flesh_eye_have()
    return new_dialog.item_much("mutant_flesh_eye",6) ~= false 
end

function sidr_six_mutant_flesh_eye_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in", 2)
	new_dialog.out_item_much("mutant_flesh_eye",6)
end

function freeman_ten_mutant_face_tushkano_have()
    return new_dialog.item_much("mutant_face_tushkano",10) ~= false 
end

function freeman_ten_mutant_face_tushkano_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 3)
	new_dialog.out_item_much("mutant_face_tushkano",10)
end

function freeman_ten_mutant_zombie_hand_have()
    return new_dialog.item_much("mutant_zombie_hand",10) ~= false 
end

function freeman_ten_mutant_zombie_hand_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 3)
	new_dialog.out_item_much("mutant_zombie_hand",10)
end

function freeman_ten_mutant_psevdogigant_hand_have()
    return new_dialog.item_much("mutant_psevdogigant_hand",5) ~= false 
end

function freeman_ten_mutant_psevdogigant_hand_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in", 3)
	new_dialog.out_item_much("mutant_psevdogigant_hand",5)
end

function freeman_ten_mutant_hand_kontroler_have()
    return new_dialog.item_much("mutant_hand_kontroler",5) ~= false 
end

function freeman_ten_mutant_hand_kontroler_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 5)
    dialogs.relocate_item_section(first_speaker, "antirad", "in", 5)
	new_dialog.out_item_much("mutant_hand_kontroler",5)
end

function svoboda_af_buliz_have()
    return new_dialog.item_much("af_buliz",1) ~= false 
end

function svoboda_af_buliz_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig552_siber", "in", 1)
	new_dialog.out_item_much("af_buliz",1)
end

function svoboda_af_cry_2_have()
    return new_dialog.item_much("af_cry_2",1) ~= false 
end

function svoboda_af_cry_2_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig550_siber", "in", 1)
	new_dialog.out_item_much("af_cry_2",1)
end

function svoboda_af_simbion_have()
    return new_dialog.item_much("af_simbion",1) ~= false 
end

function svoboda_af_simbion_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_fal_sa58_osw", "in", 1)
	new_dialog.out_item_much("af_simbion",1)
end

function svoboda_gold_art_have()
    return new_dialog.item_much("af_dummy_spring_red",1) ~= false 
end

function svoboda_gold_art_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_m4_tac", "in", 1)
	new_dialog.out_item_much("af_dummy_spring_red",1)
end

function svoboda_gold_art_famas_have()
    return new_dialog.item_much("gold_art",1) ~= false 
end

function svoboda_gold_art_famas_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_aug_a1_custom_bas", "in", 1)
	new_dialog.out_item_much("gold_art",1)
end

function svoboda_af_spirit_1_have()
    return new_dialog.item_much("af_spirit_1",1) ~= false 
end

function svoboda_af_spirit_1_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig552_tac_siber", "in", 1)
	new_dialog.out_item_much("af_spirit_1",1)
end

function svoboda_two_af_drops_have()
    return new_dialog.item_much("af_drops",2) ~= false 
end

function svoboda_two_af_drops_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in", 3)
	new_dialog.out_item_much("af_drops",2)
end

function svoboda_two_af_blood_have()
    return new_dialog.item_much("af_blood",2) ~= false 
end

function svoboda_two_af_blood_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in", 3)
	new_dialog.out_item_much("af_blood",2)
end

function svoboda_two_af_electra_sparkler_have()
    return new_dialog.item_much("af_electra_sparkler",2) ~= false 
end

function svoboda_two_af_electra_sparkler_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in", 3)
	new_dialog.out_item_much("af_electra_sparkler",2)
end

function svoboda_tri_af_ameba_slime_have()
    return new_dialog.item_much("af_ameba_slime",3) ~= false 
end

function svoboda_tri_af_ameba_slime_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in", 2)
	new_dialog.out_item_much("af_ameba_slime",3)
end

function kruglov_case_start(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "kruglov_case", "in", 1)
end

function kruglov_case_have()
    return new_dialog.item_much("kruglov_case",1) ~= false 
end

function voronin_case_vzal()
   new_dialog.out_item_much("kruglov_case",1)
end

function knyaz_abakan_have()
    return new_dialog.item_much("wpn_abakan_n_m2",1) ~= false 
end

function knyaz_abakan_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_abakan_n_m2", "out", 1)
	dialogs.relocate_item_section(first_speaker, "wpn_saiga12s_m2", "in", 1)
	dialogs.relocate_item_section(first_speaker, "check", "in", 1)
end

function ohranik_trava_have()
    return new_dialog.item_much("check",1) ~= false 
end

function ohranik_trava_done()
    new_dialog.out_item_much("check",1)
end

function petrenko_weapon_have()
    return new_dialog.item_much("wpn_rg6_m1",1) ~= false 
end

function petrenko_weapon_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_rg6_m1", "out", 1)
	dialogs.relocate_item_section(first_speaker, "wpn_akm_alfa", "in", 1)
end

function kruglov_case_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "wpn_colt_ucen", "in", 1)
    dialogs.relocate_item_section(first_speaker, "ammo_9x19_ucen", "in", 1)
end

function zombi_dal(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "book_zombi", "in", 1)
end

function sahar_shlem_have()
    return new_dialog.item_much("book_zombi",1) ~= false 
end

function sahar_shlem_done()
    new_dialog.out_item_much("book_zombi",1)
end

function sidr_lab_have()
    return new_dialog.item_much("notebook_x16",1) ~= false 
end

function sidr_lab_done()
    new_dialog.out_item_much("notebook_x16",1)
end

function mil_klyak_lab_have()
    return new_dialog.item_much("labx18_flash",1) ~= false 
end

function mil_klyak_sidr_start(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "notebook_x16", "in", 1)
end

function mil_klyak_sidr_have()
    return new_dialog.item_much("notebook_x16",1) ~= false and                                                   
    new_dialog.item_much("labx18_flash",1) ~= false
end

function mil_klyak_sidr_done()
    new_dialog.out_item_much("notebook_x16",1)
    new_dialog.out_item_much("labx18_flash",1)
end

function freeman_turist_done(first_speaker, second_speaker)
	item = nagrad.level_5[math.random(table.getn(nagrad.level_5))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function zahar_pripyat_have()
    return new_dialog.item_much("mutant_poltergeist_glas",3) ~= false and  
	new_dialog.item_much("mutant_burer_hand",3) ~= false and 
    new_dialog.item_much("mutant_tail_cat",3) ~= false and	 
    new_dialog.item_much("af_dummy_battery_red",1) ~= false
end

function zahar_pripyat_done()
    new_dialog.out_item_much("mutant_poltergeist_glas",3)
    new_dialog.out_item_much("mutant_burer_hand",3)
    new_dialog.out_item_much("mutant_tail_cat",3)
    new_dialog.out_item_much("af_dummy_battery_red",1)
end

function mil_klyak_help_have(task, info)
    if (db.actor:has_info("mil_naem1_dead") 
	and db.actor:has_info("mil_naem2_dead") 
	and db.actor:has_info("mil_naem3_dead") 
	and db.actor:has_info("mil_naem4_dead") 
	and db.actor:has_info("mil_naem5_dead") 
	and db.actor:has_info("mil_naem6_dead") 
	and db.actor:has_info("mil_naem7_dead") 
	and db.actor:has_info("mil_naem8_dead")) then
    return db.actor:give_info_portion("mil_klyak_help_have") 
    end
    return false
end

function barman_work_cogot(task, info)
    if (db.actor:has_info("ban_kogot1_dead") 
	and db.actor:has_info("ban_kogot2_dead") 
	and db.actor:has_info("ban_kogot3_dead") 
	and db.actor:has_info("ban_kogot4_dead") 
	and db.actor:has_info("ban_kogot5_dead") 
	and db.actor:has_info("ban_kogot6_dead") 
	and db.actor:has_info("ban_kogot7_dead") 
	and db.actor:has_info("ban_kogot8_dead")) then
    return db.actor:give_info_portion("barman_work_cogot") 
    end
    return false
end

function krest_work_done(first_speaker, second_speaker)
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
end

function actor_bad_detector_have()
    return new_dialog.item_much("detector_elite_bad",1) ~= false 
end

function actor_bad_detector_done()
    new_dialog.out_item_much("detector_elite_bad",1)
end

function levsha_detec_have()
    return new_dialog.item_much("af_ameba_mica",1) ~= false and                                                   new_dialog.item_much("af_gold_fish",1) ~= false  and 
    new_dialog.item_much("af_dummy_spring_red",1) ~= false and                                                      new_dialog.item_much("af_cristall",1) ~= false  and 
    new_dialog.item_much("af_soul",1) ~= false  and 
    new_dialog.item_much("af_electra_flash",1) ~= false
end

function levsha_detec_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "detector_elite", "in", 1)
	new_dialog.out_item_much("af_ameba_mica",1)
	new_dialog.out_item_much("af_gold_fish",1)
	new_dialog.out_item_much("af_dummy_spring_red",1)
	new_dialog.out_item_much("af_cristall",1)
	new_dialog.out_item_much("af_soul",1)
	new_dialog.out_item_much("af_electra_flash",1)
	new_dialog.out_item_much("detector_elite_bad",1)
end

function actor_tri_vodka_have()
    return new_dialog.item_much("vodka",3) ~= false 
end

function fanat_recept_have()
    return new_dialog.item_much("gold_art",2) ~= false 
end

function fanat_recept_done()
    new_dialog.out_item_much("gold_art",2)
end

function lapsha_give(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig226", "in", 1)
	dialogs.relocate_item_section(first_speaker, "ammo_11.43x23_fmj", "in", 1)
end

function monach_pda_have(task, info)
    if (db.actor:has_info("monach_flame1_dead") 
	and db.actor:has_info("monach_flame2_dead") 
	and db.actor:has_info("monach_flame3_dead") 
	and db.actor:has_info("monach_flame4_dead") 
	and db.actor:has_info("monach_tele1_dead") 
	and db.actor:has_info("monach_tele2_dead") 
	and db.actor:has_info("monach_tele3_dead") 
	and db.actor:has_info("monach_tele4_dead")) then
    return db.actor:give_info_portion("monach_pda_have") 
    end
    return false
end

function barman_work_est()
    return new_dialog.item_much("pda_priz",1) ~= false 
end

function barman_work_done(first_speaker, second_speaker)
    local count = math.random(3,4)
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	dialogs.relocate_item_section(first_speaker, item , "in", count)
	new_dialog.out_item_much("pda_priz",1)
end

function black_box_have()
    return new_dialog.item_much("box_black",1) ~= false 
end

function black_box_done()
    new_dialog.out_item_much("box_black",1)
end

function five_sweets_have()
    return new_dialog.item_much("sweets",1) ~= false 
end

function five_sweets_dal()
    new_dialog.out_item_much("sweets",1)
end