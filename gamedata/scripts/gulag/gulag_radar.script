local t = {}
local gulags = {}

function load_job(sj, gname, type, squad, groups)
    ----------------------------------------------------------------------------
    if type == "rad_pseudodogs" then
        for i = 1, 6 do
            t = {
                section = "logic@rad_pseudodogs_dog" .. i,
                idle = 0,
                prior = 5,
                state = {0},
                squad = squad,
                group = groups[1],
                in_rest = "",
                out_rest = ""
            }
            table.insert(sj, t)
        end

    end
    ----------------------------------------------------------------------------
    if type == "rad_snork1" then
        for i = 1, 5 do
            t = {
                section = "logic@rad_snork1_" .. i,
                idle = 0,
                prior = 5,
                state = {0},
                squad = squad,
                group = groups[1],
                in_rest = "",
                out_rest = ""
            }
            table.insert(sj, t)
        end

    end
    if type == "rad_snork2" then
        for i = 1, 10 do
            t = {
                section = "logic@rad_snork2_" .. i,
                idle = 0,
                prior = 5,
                state = {0},
                squad = squad,
                group = groups[1],
                in_rest = "",
                out_rest = ""
            }
            table.insert(sj, t)
        end

    end

    if type == "rad_zombied1" then
        for i = 1, 4 do
            t = {
                section = "logic@rad_zombied1" .. i,
                idle = 0,
                prior = 5,
                state = {0},
                squad = squad,
                group = groups[1],
                in_rest = "rad_snorks_space_restrictor",
                out_rest = ""
            }
            table.insert(sj, t)
        end
    end
    if type == "rad_zombied2" then
        for i = 1, 7 do
            t = {
                section = "logic@rad_zombied2" .. i,
                idle = 0,
                prior = 5,
                state = {0},
                squad = squad,
                group = groups[1],
                in_rest = "rad_snorks_space_restrictor",
                out_rest = ""
            }
            table.insert(sj, t)
        end
    end
end

function load_states(gname, type)
    if type == "rad_pseudodogs" then
        return function(gulag)
            return 0
        end
    end

    if type == "rad_snork1" then
        return function(gulag)
            return 0
        end
    end

    if type == "rad_snork2" then
        return function(gulag)
            return 0
        end
    end

    if type == "rad_zombied1" then
        return function(gulag)
            return 0
        end
    end

    if type == "rad_zombied2" then
        return function(gulag)
            return 0
        end
    end
end

--------------------------------------------------------------------------
-- Dynamic ltx
--------------------------------------------------------------------------
function load_ltx(gname, type)
    if type == "rad_pseudodogs" then
        return load_ltx_pseudodogs(gname, type)
    end
    if type == "rad_snork1" then
        return load_ltx_snork1(gname, type)
    end
    if type == "rad_snork2" then
        return load_ltx_snork2(gname, type)
    end
    if type == "rad_zombied1" then
        return load_ltx_zombied1(gname, type)
    end
    if type == "rad_zombied2" then
        return load_ltx_zombied2(gname, type)
    end
    return nil
end

-----------mob_campers---------------------------------------------------------------
function load_ltx_pseudodogs(gname, type)
    local i, res = 0, ""
    for i = 1, 6 do
        res =
            res .. "[logic@" .. gname .. "_dog" .. i .. "]\n" .. "active = mob_home@" .. gname .. "_dog" .. i .. "\n" ..

                "[mob_home@" .. gname .. "_dog" .. i .. "]\n" .. "path_home = home" .. i .. "\n" ..
                "npc_friendly = true\n" .. "path_look = look" .. i .. "\n"
    end
    return res
end

function load_ltx_snork1(gname, type)
    local i, res = 0, ""

    for i = 1, 2 do
        res = res .. "[logic@" .. gname .. "_" .. i .. "]\n" .. "active = mob_home@" .. gname .. i .. "\n" ..

                  "[mob_home@" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" .. "npc_friendly = true\n" ..
                  "path_look = look" .. i .. "\n" .. "on_info =  {+rad_start_snork1_jumping} mob_jump@" .. gname .. i ..
                  "\n" .. "[mob_jump@" .. gname .. i .. "]\n" .. "path_jump = look" .. i .. "\n" ..
                  "ph_jump_factor =1.5\n" .. "offset = 0, 0, 0\n" .. "on_signal = jumped | mob_home@2" .. gname .. i ..
                  " %=bar_arena_hit%\n" .. "[mob_home@2" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" ..
                  "npc_friendly = true\n" .. "path_look = look" .. i .. "\n" .. "on_timer =  120000| mob_home@" .. gname ..
                  i .. " %-rad_start_snork1_jumping%\n"
    end

    for i = 3, 4 do
        res = res .. "[logic@" .. gname .. "_" .. i .. "]\n" .. "active = mob_home@" .. gname .. i .. "\n" ..

                  "[mob_home@" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" .. "npc_friendly = true\n" ..
                  "path_look = look" .. i .. "\n" .. "on_info =  {+rad_start_snork1_jumping2} mob_jump@" .. gname .. i ..
                  "\n" .. "[mob_jump@" .. gname .. i .. "]\n" .. "path_jump = look" .. i .. "\n" ..
                  "ph_jump_factor =1.5\n" .. "offset = 0, 0, 0\n" .. "on_signal = jumped | mob_home@2" .. gname .. i ..
                  " %=bar_arena_hit%\n" .. "[mob_home@2" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" ..
                  "npc_friendly = true\n" .. "path_look = look" .. i .. "\n" .. "on_timer =  120000| mob_home@" .. gname ..
                  i .. " %-rad_start_snork1_jumping2%\n"
    end

    for i = 5, 11 do
        res = res .. "[logic@" .. gname .. "_" .. i .. "]\n" .. "active = mob_home@" .. gname .. i .. "\n" ..

                  "[mob_home@" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" .. "npc_friendly = true\n" ..
                  "path_look = look" .. i .. "\n"
    end

    return res
end

function load_ltx_snork2(gname, type)
    local i, res = 0, ""
    for i = 1, 10 do
        res = res .. "[logic@" .. gname .. "_" .. i .. "]\n" .. "active = mob_home@" .. gname .. i .. "\n" ..

                  "[mob_home@" .. gname .. i .. "]\n" .. "path_home = home" .. i .. "\n" .. "npc_friendly = true\n" ..
                  "path_look = look" .. i .. "\n"
    end
    return res
end

function load_ltx_zombied1(gname, type)
    local i, res = 0, ""
    for i = 1, 4 do
        res =
            res .. "[logic@" .. gname .. i .. "]\n" .. "active = walker@" .. gname .. i .. "\n" .. "[walker@" .. gname ..
                i .. "]\n" .. "npc_friendly = true\n" .. "path_walk = walk\n"
    end
    return res
end

function load_ltx_zombied2(gname, type)
    local i, res = 0, ""
    for i = 1, 7 do
        res =
            res .. "[logic@" .. gname .. i .. "]\n" .. "active = walker@" .. gname .. i .. "\n" .. "[walker@" .. gname ..
                i .. "]\n" .. "npc_friendly = true\n" .. "path_walk = walk\n"
    end
    return res
end

--------------------------------------------------------------------------
function checkStalker(npc_community, gulag_type, npc_rank, se_obj)
    if gulag_type == "rad_zombied1" or gulag_type == "rad_zombied2" then
        return npc_community == "zombied"
    end

    return false
end

function checkMonster(npc_community, gulag_type)
    if gulag_type == "rad_pseudodogs" then
        return npc_community == "pseudodog"
    end

    if gulag_type == "rad_snork1" or gulag_type == "rad_snork2" then
        return npc_community == "snork"
    end

    return false
end