-- AMK Поддержка функциональности диалогов
-- Initial release by Red75

function make_kill_task_failed(actor,npc,p1,p2) 
  local nid=npc:id()
  if nid==db.actor:id() then
    nid=actor:id()
  end
  local targets=task_manager.amk_kill_targets()
  for n,v in pairs(targets) do
    if v.id==nid then
      task_manager.make_task_failed(v.task_id)
    end
  end  
end

rndval=nil

function act_rnd_init(actor,npc) -- инициализирует значение переменной случайным числом и создаёт функции проверки
  setfenv(1,amk_dialogs)
  if pre_rnd_0_100==nil then
    for a=0,90,10 do
      for b=10,100,10 do
        if a<b then
          if a==0 then
            amk_dialogs["pre_rnd_"..a.."_"..b]=function()
              return rndval<b
              end
          elseif b==100 then
            amk_dialogs["pre_rnd_"..a.."_"..b]=function()
              return rndval>=a
              end
          elseif a==0 and b==100 then
            amk_dialogs["pre_rnd_"..a.."_"..b]=function()
              return true
              end
          else
            amk_dialogs["pre_rnd_"..a.."_"..b]=function()
              return rndval>=a and rndval<b
              end
          end
        end
        setfenv(amk_dialogs["pre_rnd_"..a.."_"..b],amk_dialogs)            
      end
    end
  end
  rndval=math.random(1,100)
end



function frenzy_humanoid(talker,listener) -- можно вызывать как из фразы ГГ, так и NPC
  local tgt=talker
  if tgt:id()==db.actor:id() then
    tgt=listener
  end
  local h = hit()
  h.power = 0
  h.direction = tgt:direction()
  h.bone = "bip01_spine"
  h.draftsman = db.actor
  h.impulse = 0
  h.type = hit.wound
  tgt:hit(h)
end

function scare_humanoid(talker,listener) -- можно вызывать как из фразы ГГ, так и NPC
  local tgt=talker
  if tgt:id()==db.actor:id() then
    tgt=listener
  end
  tgt:set_custom_panic_threshold(1.0)
  local h = hit()
  h.power = 0.5
  h.direction = tgt:direction()
  h.bone = "bip01_spine"
  h.draftsman = db.actor
  h.impulse = 0
  h.type = hit.wound
  tgt:hit(h)
  tgt.morale=0
--  local hc=tgt:get_holder_class()
--  amk.mylog("morale ".. tgt.morale .. " hclass " .. type(hc) .. " mor " .. type(hc.SetMorale))
end


function info_received()
  amk.send_tip("",game.translate_string("st_found_new_pda"),0,10,"gen_info")
end

function actor_has_money_30000()
  return db.actor:money()>=30000
end

function give_money_30000(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  dialogs.relocate_money(npc,30000,"out")
end
