class "amk_music"
function amk_music:__init()
	self.left = nil
	self.right = nil
	self.end_time=nil
end

function amk_music:initialize(sound)

	self.right = sound_object(sound.."_r")
	self.left = sound_object(sound.."_l")
	self.end_time = nil

end

function amk_music:play()
	if self:playing() then
		self:stop()
	end
	local dir = device().cam_right
	dir.y=0
	self.right:play_at_pos(db.actor, dir, 0, sound_object.s2d)
	dir.x=-dir.x
	dir.z=-dir.z
	self.left:play_at_pos(db.actor, dir, 0, sound_object.s2d)
	self.end_time = time_global() + self.left:length()
	return self.end_time
end

function amk_music:play_at_time(time)
	if self:playing() then
		self:stop()
	end
	local dir = device().cam_right
	dir.y=0
	self.right:play_at_pos(db.actor, dir, (time - time_global())/1000, sound_object.s2d)
	dir.x=-dir.x
	dir.z=-dir.z
	self.left:play_at_pos(db.actor, dir,  (time - time_global())/1000, sound_object.s2d)
	self.end_time = time + self.left:length()
	return self.end_time
end

function amk_music:playing()
	return self.left and self.left:playing()
end

function amk_music:update()
	if self:playing() then
		local dir = device().cam_right
		dir.y=0
		self.right:set_position(dir)
		dir.x=-dir.x
		dir.z=-dir.z
		self.left:set_position(dir)
	end
end

function amk_music:stop()
	if self.right:playing() then self.right:stop() end
	if self.left:playing() then self.left:stop() end
end

function amk_music:length()
	return self.left and self.left:length() or 1
end
