-- -*- mode: lua; encoding: windows-1251 -*-
-------------------------------------------------------------------------------------------
-- File         : game_options.script
-- Description  : Сохранение дополнительных игровых опций
-- Created      : 03.12.2014
-- Last update  : 31.12.2015
-- Author       : naxac
-------------------------------------------------------------------------------------------
-- При добавлении новой опции обязательно выставить дефолтное значение!
-- Типы сохраняемых значений: string, number и boolean

AmkMus			= true		-- Dynamic Music
AmkHit			= true		-- Hitmarker
AmkTrs			= 2		-- Treasure
AmkWpn			= true		-- Weapon effect
AmkEat			= true		-- Eat effect

UserName		= user_name()	-- текущее имя пользователя

-- Вызывается один раз при загрузке скриптов
function load_game_options()
	local fs = getFS()
	if fs:exist("$app_data_root$", "game.options") == nil then
		local f1 = fs:update_path("$fs_root$", "fsgame.ltx")
		local f2 = fs:update_path("$app_data_root$", "game.options")
		fs:file_copy(f1, f2)
		save_game_options()
	else
		local file = io.open(fs:update_path("$app_data_root$", "game.options"), "r")
		local opt, val, n = "", "", 0
		local m = _G[script_name()]
		for line in file:lines() do
			opt, val = string.match(line, "([%w_]+)%s*=%s*(.+)")
		--	log("load options: "..tostring(opt).." = "..tostring(val))
			if opt and m[opt]~=nil then
				n = tonumber(val)
				if n then m[opt] = n
				elseif val=='true' then m[opt] = true
				elseif val=='false' then m[opt] = false
				elseif val~="" then m[opt] = val end
			end
		end
		file:close(file)
	end
end

-- Вызывается из игровых опций при нажатии кнопки "Применить"
function save_game_options()
	-- Отсортируем по алфавиту для удобства
	local tmp = {}
	for k,v in pairs( _G[ script_name() ] ) do
		if type( v ) ~= 'function' then
			table.insert( tmp, { k, v } )
		end
	end
	table.sort( tmp, function( t1, t2 )
		return t1[1] < t2[1]
	end )

	local file = io.open( getFS():update_path( "$app_data_root$", "game.options" ), "w" )
	for i,v in ipairs( tmp ) do
		file:write( v[1], " = ", tostring( v[2] ), "\n" )
	end
	file:close( file )
end
