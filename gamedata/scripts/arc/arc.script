function attach(sm)
  sm:subscribe({ signal = "on_update",       fun = this.on_actor_update })
  sm:subscribe({ signal = "on_key_down",     fun = this.on_key_down	})
  sm:subscribe({ signal = "on_key_up",       fun = this.on_key_up	})
end

function on_actor_update(delta)
  arc_radiation.on_actor_update(delta)
  arc_health.on_actor_update(delta)
  arc_ui_dosimeter.update(delta)
  on_hud_update(delta)
end

local arc_hud
function on_hud_update(delta)
	if not arc_hud then

		local hud = get_hud()
		arc_hud = hud:GetCustomStatic("arc_hud")

		if not arc_hud then
			hud:AddCustomStatic("arc_hud", true)
			arc_hud = hud:GetCustomStatic("arc_hud")
		end
	end
end

function on_key_down(key, bind)
	if level.main_input_receiver() or not db.actor:alive() or device().precache_frame > 1 then return end
	if bind == key_bindings.kSCORES then
		arc_ui_dosimeter.show()
	end
end

function on_key_up(key, bind)
	if bind == key_bindings.kSCORES then
		arc_ui_dosimeter.fade()
	end
end