-- -*- mode: lua; encoding: windows-1251 -*-
local DEFAULT_FADE_DELAY = 5000
local DEFAULT_FADE_TIME = 3000

local MAX_ARROW_POS = 1.08
local MIN_ARROW_POS = -0.1

local alpha = 0

local is_fading = false
local fade_delay, fade_total_time, fade_time_left

local enabled

function on_detector_to_belt(obj)
	if not string.find( obj:section(), "^detector_" ) then return end
	enabled = true
end

function on_detector_to_ruck(obj)
	if not string.find( obj:section(), "^detector_" ) then return end
	enabled = false
end

function show()
	is_fading = false
	alpha = 255
end

function hide()
	if is_fading then return end
	alpha = 0
end

function fade(update_fade, update_delay, update_time)
	if not is_fading or update_fade then
		alpha = 255
		is_fading = true
	
		fade_delay = update_delay or DEFAULT_FADE_DELAY
		fade_total_time = update_time or DEFAULT_FADE_TIME
		fade_time_left = fade_total_time
	end
end

function update(delta)
	-- Fading:
	if is_fading then
		if fade_delay > 0 then
			fade_delay = fade_delay - delta
		elseif fade_time_left >= delta then
			fade_time_left = fade_time_left - delta
			alpha = ( 255 * fade_time_left / fade_total_time )
		else
			is_fading = false
			alpha = 0
		end
	end
	
	-- Updating dosimeter:
	show_dosimeter(delta)
end

local dosimeter

local arrow_velocity, arrow_position = 0, 0

function show_dosimeter(delta) -- FIXME
	if not dosimeter then
		if not init_dosimeter() then
			return
		end
	end
	
	dosimeter.monitor:SetText(arc_radiation.get_dose_string())
	
	local a = (enabled and alpha) or 0
	
	dosimeter.monitor:SetTextColor(a*0.7, arc_radiation.get_dose_string_color())
	dosimeter.monitor:SetColor(GetARGB(a,255,255,255))

	if no_show_scale then return end


	local r = arc_radiation.get_rad_level()
	
	arrow_velocity = arrow_velocity*math.pow(0.995, delta) + (r - arrow_position)*delta/2000
	arrow_position = arrow_position + arrow_velocity
	
	-- Off-scale:
	if arrow_position > MAX_ARROW_POS then
		arrow_position = MAX_ARROW_POS
		arrow_velocity = -0.015
	elseif arrow_position < MIN_ARROW_POS then
		arrow_position = MIN_ARROW_POS
		arrow_velocity = 0.015
	end
	
end

function init_dosimeter()
	dosimeter = {}
	
	local arc_hud = arc_ui_hud.get_arc_hud()
	
	if not arc_hud then
		return false
	end
	
	local w = arc_hud:wnd()
	
	local m = CUIStatic()
	m:SetAutoDelete(true)
	m:SetStretchTexture(true)
	m:InitTexture("arc\\serafim_monitor")
	m:Init(945,730,256,64)
	m:SetTextX(16)
	m:SetTextY(10)
	m:SetTextColor(128,150,250,200)
	m:SetFont(GetFontGraffiti32Russian())
	w:AttachChild(m)
	dosimeter.monitor = m
	
	return true
end

function attach(sm)
  sm:subscribe({ signal = "on_item_to_belt", fun = this.on_detector_to_belt })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.on_detector_to_ruck })
end