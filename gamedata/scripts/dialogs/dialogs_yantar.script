--------------------------------------------------------------------------------------------------------
-- Trader Repair
--------------------------------------------------------------------------------------------------------

function trader_repair_precond(trader, actor)
	local item_in_slot_1 = db.actor:item_in_slot(1)
	local item_in_slot_2 = db.actor:item_in_slot(2)
	local item_in_slot_6 = db.actor:item_in_slot(6)
	if ( item_in_slot_1 and item_in_slot_1:condition() < 1 )
	or ( item_in_slot_2 and item_in_slot_2:condition() < 1 )
	or ( item_in_slot_6 and item_in_slot_6:condition() < 1 ) then return true
	else return false
	end
end

function repair_check_money(trader, actor, slot)
	local item_slot = db.actor:item_in_slot(slot)
	if item_slot then 
		local item_repair_cost = math.floor((1 - item_slot:condition()) * item_slot:cost() * 1.8 )
		if item_repair_cost > 0 and db.actor:money() >= item_repair_cost and 1 > item_slot:condition() then
			return true
		end 
	end
	return false
end

function trader_repair(trader, actor, slot)
	local item_slot = db.actor:item_in_slot(slot)
	if item_slot then
		local item_repair_cost = math.floor((1 - item_slot:condition()) * item_slot:cost() * 1.8)
		item_slot:set_condition(1)
		dialogs.relocate_money(actor, item_repair_cost, "out")
	end	
end

function repair_costs_function(first_speaker, second_speaker, slot)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	local item_name_and_price = ""
	local item_repair_cost = 0
	local item_slot = db.actor:item_in_slot(slot)

	if item_slot then 
		item_repair_cost = math.floor((1 - item_slot:condition()) * item_slot:cost() * 1.8)
		if item_repair_cost > 0 then
			item_name_and_price = game.translate_string("list_trader_repair_0").." %c[255,238,155,23]"..item_repair_cost.." рублей%c[default]"
			db.actor:give_talk_message(item_name_and_price, task_texture, task_rect, "other_iconed_answer_item")
		end
	end
end

function trader_check_money_s1(trader, actor)
	return repair_check_money(trader, actor, 1)
end

function trader_check_money_s2(trader, actor)
	return repair_check_money(trader, actor, 2)
end

function trader_check_money_s6(trader, actor)
	return repair_check_money(trader, actor, 6)
end

function trader_repiar_weapon_s1(trader, actor)
	trader_repair(trader, actor, 1)
end

function trader_repiar_weapon_s2(trader, actor)
	trader_repair(trader, actor, 2)
end

function trader_repiar_armor_s6(trader, actor)
	trader_repair(trader, actor, 6)
end

function repair_costs(first_speaker, second_speaker)
	if db.actor then 
		repair_costs_function(first_speaker, second_speaker, 1)
		repair_costs_function(first_speaker, second_speaker, 2)
		repair_costs_function(first_speaker, second_speaker, 6)
	end
end


function have_kruglov_flash(first_speaker, second_speaker)
  	return first_speaker:object("kruglov_flash") ~= nil
end
function give_kruglov_flash(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kruglov_flash", "out")
end
function give_ecolog_outfit(first_speaker, second_speaker)
	if not has_alife_info("yan_ecolog_outfit_given") then
		dialogs.relocate_item_section(second_speaker, "ecolog_outfit", "in")
		db.actor:give_info_portion("yan_ecolog_outfit_given")
	end
end

function yan_professor_talk_outfit (first_speaker, second_speaker)
	if not has_alife_info("bar_x16_documents_start") and has_alife_info("bar_heli_scene_professor_die") then
		return true
	end
	if not has_alife_info("bar_x16_documents_start") then
		if has_alife_info("bar_rescue_research_done") and  has_alife_info("yan_ecolog_outfit_given") then
			return true
		else 
			return false
		end
		return true
	end
	return false
end

function yan_professor_task_x16_precond (first_speaker, second_speaker)
	if has_alife_info("bar_rescue_research_fail") or has_alife_info("bar_heli_scene_professor_die") then
		return true
	end
	return false
end